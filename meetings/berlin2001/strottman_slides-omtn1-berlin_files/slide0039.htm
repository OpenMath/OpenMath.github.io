<html xmlns:v="urn:schemas-microsoft-com:vml"
xmlns:o="urn:schemas-microsoft-com:office:office"
xmlns:p="urn:schemas-microsoft-com:office:powerpoint"
xmlns="http://www.w3.org/TR/REC-html40">

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=ProgId content=PowerPoint.Slide>
<meta name=Generator content="Microsoft PowerPoint 9">
<link id=Main-File rel=Main-File href="../strottman_slides-omtn1-berlin.htm">
<link rel=Preview href=preview.wmf>
<!--[if !mso]>
<style>
v\:* {behavior:url(#default#VML);}
o\:* {behavior:url(#default#VML);}
p\:* {behavior:url(#default#VML);}
.shape {behavior:url(#default#VML);}
v\:textbox {display:none;}
</style>
<![endif]-->
<title>Sorted Quantifiers in OpenMath</title>
<meta name=Description
content="5-Sep-01: Categorial Semantics for OpenMath : OMBIND">
<link rel=Stylesheet href="master03_stylesheet.css">
<![if !ppt]>
<style media=print>
<!--.sld
	{left:0px !important;
	width:6.0in !important;
	height:4.5in !important;
	font-size:107% !important;}
-->
</style>
<script src=script.js></script><script><!--
gId="slide0039.htm"
if( !IsNts() ) Redirect( "PPTSld", gId );
//-->
</script><!--[if vml]><script>g_vml = 1;
</script><![endif]--><script for=window event=onload><!--
if( !IsSldOrNts() ) return;
if( MakeNotesVis() ) return;
LoadSld( gId );
MakeSldVis(0);
//-->
</script><![endif]><o:shapelayout v:ext="edit">
 <o:idmap v:ext="edit" data="57"/>
</o:shapelayout>
</head>

<body lang=EN-US style='margin:0px;background-color:black'
onclick="DocumentOnClick()" onresize="_RSW()" onkeypress="_KPH()">

<div id=SlideObj class=sld style='position:absolute;top:0px;left:0px;
width:534px;height:400px;font-size:16px;background-color:white;clip:rect(0%, 101%, 101%, 0%);
visibility:hidden'><p:slide coordsize="720,540"
 colors="#AA947E,#463634,#000000,#795241,#F9DBD3,#DACA9C,#393A18,#560000"
 masterhref="master03.xml">
 <p:shaperange href="master03.xml#_x0000_s1025"/><![if !vml]><img
 src="master03_background.gif" v:shapes="_x0000_s1025" style='position:absolute;
 top:0%;left:0%;width:100.0%;height:100.0%'><![endif]><![if !ppt]><p:shaperange
  href="master03.xml#_x0000_s1034"/><p:shaperange
  href="master03.xml#_x0000_s1035"/><![endif]><p:shaperange
  href="master03.xml#_x0000_m1032"/><v:shape id="_x0000_s58370" type="#_x0000_m1032"
  style='position:absolute;left:54pt;top:48pt;width:612pt;height:90pt'
  o:userdrawn="f">
  <v:fill o:detectmouseclick="f"/>
  <v:stroke o:forcedash="f"/>
  <o:lock v:ext="edit" text="f"/>
  <p:placeholder type="title"/></v:shape><p:shaperange
  href="master03.xml#_x0000_m1033"/><v:shape id="_x0000_s58371" type="#_x0000_m1033"
  style='position:absolute;left:54pt;top:156pt;width:612pt;height:324pt'
  o:userdrawn="f">
  <v:fill o:detectmouseclick="f"/>
  <v:stroke o:forcedash="f"/>
  <o:lock v:ext="edit" text="f"/>
  <p:placeholder type="body" position="1"/></v:shape>
 <div v:shape="_x0000_s58370" class=T><span style='position:absolute;
 top:8.0%;left:8.42%;width:83.14%'>Categorial Semantics for </span><span
 style='position:absolute;top:17.25%;left:8.42%;width:83.14%'>OpenMath : <span
 style='font-family:"Courier New"'>OMBIND</span><span style='mso-special-format:
 lastCR;display:none'>&#13;</span></span></div>
 <div v:shape="_x0000_s58371">
 <div class=B style='mso-line-spacing:"90 20 0";position:absolute;top:29.0%;
 left:8.42%;width:83.14%;height:6.5%'><span style='position:absolute;
 top:0%;left:4.5%;width:95.49%'><span style='font-size:88%'><span
 style='mso-special-format:bullet;color:#795241;mso-color-index:3;position:
 absolute;left:-4.71%;top:.49em;font-family:Wingdings;font-size:65%'>v</span></span><span
 style='font-size:88%'>bind(a,v,e) is type A </span><span style='font-family:
 Symbol;font-size:88%;mso-char-type:symbol'>·</span><span style='font-size:
 88%'> (E/V)&#13;</span></span></div>
 <div class=B1 style='mso-line-spacing:"90 20 0";position:absolute;top:36.25%;
 left:13.48%;width:78.08%;height:5.25%'><span style='position:absolute;
 top:0%;left:4.07%;width:96.16%'><span style='font-size:86%'><span
 style='mso-special-format:bullet;position:absolute;left:-4.23%'>–</span></span><span
 style='font-size:86%'>Different from STS and ECC (but similar!)&#13;</span></span></div>
 <div class=B1 style='mso-line-spacing:"90 20 0";position:absolute;top:42.0%;
 left:13.48%;width:78.08%;height:5.25%'><span style='position:absolute;
 top:0%;left:4.07%;width:96.16%'><span style='font-size:86%'><span
 style='mso-special-format:bullet;position:absolute;left:-4.23%'>–</span></span><span
 style='font-size:86%'>Note that OM defines currying rule for bind&#13;</span></span></div>
 <div class=B1 style='mso-line-spacing:"90 20 0";position:absolute;top:47.75%;
 left:13.48%;width:79.21%;height:5.25%'><span style='position:absolute;
 top:0%;left:4.01%;width:95.98%'><span style='font-size:86%'><span
 style='mso-special-format:bullet;position:absolute;left:-4.18%'>–</span></span><span
 style='font-size:86%'>Binders are therefore generally of type Y/(E/V)&#13;</span></span></div>
 <div class=B style='mso-line-spacing:"90 20 0";position:absolute;top:53.75%;
 left:8.42%;width:83.14%;height:6.0%'><span style='position:absolute;
 top:0%;left:4.5%;width:95.49%'><span style='font-size:88%'><span
 style='mso-special-format:bullet;color:#795241;mso-color-index:3;position:
 absolute;left:-4.71%;top:.49em;font-family:Wingdings;font-size:65%'>v</span></span><span
 style='font-size:88%'>Per-binder type assignments (lexicalism)&#13;</span></span></div>
 <div class=B1 style='mso-line-spacing:"90 20 0";position:absolute;top:60.5%;
 left:13.48%;width:78.08%;height:5.25%'><span style='position:absolute;
 top:0%;left:4.07%;width:96.16%'><span style='font-size:86%'><span
 style='mso-special-format:bullet;position:absolute;left:-4.23%'>–</span></span><span
 style='font-size:86%'>type(lambda) = (</span><span style='font-size:86%'><b><i>X</i></b></span><span
 style='font-size:86%'>/</span><span style='font-size:86%'><b><i>X</i></b></span><span
 style='font-size:86%'>) or = ((</span><span style='font-size:86%'><b><i>X</i></b></span><span
 style='font-size:86%'>/</span><span style='font-size:86%'><b><i>Y</i></b></span><span
 style='font-size:86%'>)/(</span><span style='font-size:86%'><b><i>X</i></b></span><span
 style='font-size:86%'>/</span><span style='font-size:86%'><b><i>Y</i></b></span><span
 style='font-size:86%'>))&#13;</span></span></div>
 <div class=B2 style='mso-line-spacing:"90 20 0";position:absolute;top:66.0%;
 left:18.53%;width:73.22%;height:4.75%'><span style='position:absolute;
 top:0%;left:3.32%;width:96.41%'><span style='font-size:83%'><span
 style='mso-special-format:bullet;position:absolute;left:-3.44%'>•</span></span><span
 style='font-size:83%'>(</span><span style='font-size:83%'><b><i>X</i></b></span><span
 style='font-size:83%'>/</span><span style='font-size:83%'><b><i>X</i></b></span><span
 style='font-size:83%'>) </span><span style='font-family:Symbol;font-size:83%;
 mso-char-type:symbol'>·</span><span style='font-size:83%'> (E/</span><span
 style='font-size:83%'><b><i>V</i></b></span><span style='font-size:83%'>) =
 ((E/</span><span style='font-size:83%'><b><i>V</i></b></span><span
 style='font-size:83%'>)/(E/</span><span style='font-size:83%'><b><i>V</i></b></span><span
 style='font-size:83%'>)) </span><span style='font-family:Symbol;font-size:
 83%;mso-char-type:symbol'>·</span><span style='font-size:83%'> (E/</span><span
 style='font-size:83%'><b><i>V</i></b></span><span style='font-size:83%'>) = E/</span><span
 style='font-size:83%'><b><i>V&#13;</i></b></span></span></div>
 <div class=B2 style='mso-line-spacing:"90 20 0";position:absolute;top:71.0%;
 left:18.53%;width:73.22%;height:4.25%'><span style='position:absolute;
 top:0%;left:3.32%;width:96.41%'><span style='font-size:83%'><span
 style='mso-special-format:bullet;position:absolute;left:-3.44%'>•</span></span><span
 style='font-size:83%'>Note “meta” type variables and unification&#13;</span></span></div>
 <div class=B1 style='mso-line-spacing:"90 20 0";position:absolute;top:76.25%;
 left:13.48%;width:78.08%;height:5.25%'><span style='position:absolute;
 top:0%;left:4.07%;width:96.16%'><span style='font-size:86%'><span
 style='mso-special-format:bullet;position:absolute;left:-4.23%'>–</span></span><span
 style='font-size:86%'>type(forall) = 2/(2/</span><span style='font-size:86%'><b><i>X</i></b></span><span
 style='font-size:86%'>)&#13;</span></span></div>
 <div class=B2 style='mso-line-spacing:"90 20 0";position:absolute;top:81.75%;
 left:18.53%;width:73.22%;height:4.25%'><span style='position:absolute;
 top:0%;left:3.32%;width:96.41%'><span style='font-size:83%'><span
 style='mso-special-format:bullet;position:absolute;left:-3.44%'>•</span></span><span
 style='font-size:83%'>With type “2” (boolean) plugged in from “outside”&#13;</span></span></div>
 <div class=B1 style='mso-line-spacing:"90 20 0";position:absolute;top:87.0%;
 left:13.48%;width:78.08%;height:5.25%'><span style='position:absolute;
 top:0%;left:4.07%;width:96.16%'><span style='font-size:86%'><span
 style='mso-special-format:bullet;position:absolute;left:-4.23%'>–</span></span><span
 style='font-size:86%'>type(the) = (</span><span style='font-size:86%'><b><i>X</i></b></span><span
 style='font-size:86%'>/(2/</span><span style='font-size:86%'><b><i>X</i></b></span><span
 style='font-size:86%'>)) </span></span></div>
 </div>
</p:slide></div>

</body>

</html>
