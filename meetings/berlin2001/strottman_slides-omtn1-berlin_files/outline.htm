<html>

<head>
<meta http-equiv=Content-Type content="text/html; charset=windows-1252">
<meta name=ProgId content=PowerPoint.Slide>
<meta name=Generator content="Microsoft PowerPoint 9">
<link id=Main-File rel=Main-File href="../strottman_slides-omtn1-berlin.htm">
<link rel=Preview href=preview.wmf>
<meta name=Robots content=NoIndex>
<script src=script.js></script><script><!--

if( !(IsWin("PPTOtl")||IsWin("PPTNav")||IsWin("PPTOtlNav")) )
{
	obj = document.all.item("Main-File")
	parent.location.href=obj.href
}

var gOtlHiliteClr="#FFFFFF",gOtlNormalClr="#000000",gOtlActiveClr="#FFFF00",gSelected="",gTxtState=false,gChildEntryTable=new Array()

function Load()
{
	if( IsWin("PPTOtl" ) ){ LoadOtl(); parent.gOtlLoaded=true; return }
	if( IsWin("PPTNav" ) ){ LoadNav("NavObj",UpdNav); parent.gNavLoaded=true; return }
	if( IsWin("PPTOtlNav" ) ){ LoadNav("OtlNavObj",UpdOtlNav); parent.gOtlNavLoaded=true; return }
}
function Upd(){ if( IsWin("PPTNav") ) LoadNav("NavObj",UpdNav) }
function LoadNav( oId,UpdFunc )
{
	document.ondragstart=CancelDrag
	document.onselectstart=CancelDrag
	document.body.style.margin=2
	UpdFunc()
	obj=document.all.item(oId)
	obj.style.display="block"
	obj.style.visibility="visible"
	document.bgColor="threedface"
}
function LoadOtl()
{
	document.ondragstart=CancelDrag
	document.onselectstart=CancelDrag
	OtlObj.style.display="block"
	OtlObj.style.visibility="visible"
	if( gOtlActiveClr == "" ) gOtlActiveClr=document.linkColor
	if( gOtlHiliteClr == "" ) gOtlHiliteClr=document.fgColor
	if( gOtlNormalClr == "" )
		gOtlNormalClr=document.bgColor
	else
		document.bgColor=gOtlNormalClr  

	InitArray()

	if( ObjExists( parent.gCurSld ) ) {
		ChangeState( parent.gCurSld,gOtlNormalClr,gOtlHiliteClr )
		gSelected=parent.gCurSld
	}
	else gSelected = -1

	UpdOtl()
}
function UpdOtl(){ UpdIdx(parent.gCurSld) }
function UpdIdx( idx )
{
	if( gSelected != idx ) {
		if( gSelected > 0 )
			ChangeState( gSelected,gOtlHiliteClr,gOtlNormalClr )

		if( ObjExists( idx ) ) {
			gSelected = idx
			ChangeState( gSelected,gOtlNormalClr,gOtlHiliteClr )
		}
		else gSelected = -1
	}

	if( gTxtState != parent.gOtlTxtExp ) {
		state = "block"
		if( !parent.gOtlTxtExp )
			state="none"

		for(ii=0; ii<gChildEntryTable.length; ii++) {
			obj=gChildEntryTable[ii];
			if( obj.id == null ) continue;

			if( obj.id.indexOf("PPTC") >= 0 )
				obj.style.display=state;
		} 
		gTxtState=parent.gOtlTxtExp
		if( ObjExists( gSelected ) )
			ChangeState( gSelected,gOtlNormalClr,gOtlHiliteClr )
	}
}
function InitArray()
{
	count=0
	for(ii=0; ii<document.all.tags("DIV").length; ii++) {
		obj=document.all.tags("DIV").item(ii)
		if( obj.id == null ) continue

		if( obj.id.indexOf("PPTC") >= 0 ) {   
			gChildEntryTable[count++]=obj
			obj.children.tags("TABLE").item(0).style.borderColor=gOtlNormalClr
		}
	}
}
function ChangeState( idx,fgColor,bgColor )
{
	obj=document.all.item("PPTL"+idx)
	obj.style.color=fgColor

	obj=document.all.item("PPTP"+idx)
	obj.style.backgroundColor=bgColor

	obj=document.all.item("PPTB"+idx)
	if( obj )
		obj.style.borderLeftColor=obj.style.borderBottomColor=bgColor
}
function ChgClr( o,clr ){ if( o.id != "PPTL"+gSelected ) o.style.color=clr }
function Over( obj ){ ChgClr(obj,gOtlActiveClr) }
function Out( obj ){ ChgClr(obj,gOtlHiliteClr) }
function ObjExists( ii ) { obj=document.all("PPTP"+ii ); return( obj ) }
function GoToSld( href ){ UpdIdx(parent.GetSldNum(href)); parent.GoToSld( href ) }
function CancelDrag(){ window.event.cancelBubble=true;window.event.returnValue=false}

function UpdNav()
{
	txt = "<center>";
	if( parent.GetHrefObj( parent.gCurSld ).mOrigVis == 1 )
		txt += "Slide " + parent.GetCurSldNum() + " of " + parent.GetNumSlds()
	else
		txt += "Hidden Slide"
	txt += "</center>";
	nav_text.innerHTML = txt;

	if( !parent.HasPrevSld() )
		gBtnArr["nb_prev"].Enabled(0)
	else
		gBtnArr["nb_prev"].Enabled(1)

	if( !parent.HasNextSld() )
		gBtnArr["nb_next"].Enabled(0)
	else
		gBtnArr["nb_next"].Enabled(1)
	gBtnArr["nb_nts"].SetEnabled()
	gBtnArr["nb_nts"].SetFlag( parent.gHasNts )

	gBtnArr["nb_sldshw"].Enabled(1)
	gBtnArr["nb_voice"].Enabled(1)
}

function UpdOtlNav()
{
	gBtnArr["nb_otl"].SetEnabled();

	if( parent.gOtlOpen )
		gBtnArr["nb_otlTxt"].Enabled( true );
	else
		document.all.item("nb_otlTxtBorder").style.visibility = "hidden";
}



//-->
</script>
<style>
<!--.PTxt
	{position:relative;
	width:100%;
	margin-top:5px;
	padding-left:5px;
	font-weight:bold;}
.CTxt
	{position:relative;
	width:100%;
	padding-left:10px;}
.CBorder
	{position:relative;
	width:100%;
	border-style:solid;
	border-width:1px;
	border-color:black;
	padding-bottom:5px;}
a
	{color:white;
	text-decoration:none;}
.button
	{position:absolute;
	width:32px;
	height:20px;
	border-style:solid;
	border-width:1px;
	border-color:threedface;}
-->
</style>
</head>

<body onload="Load()">

<div id=NavObj onload="Load()" onmouseover="BtnOnOver()"
onmousedown="BtnOnDown()" onmouseout="BtnOnOut()" onmouseup="BtnOnUp()"
onkeypress="_KPH()" style='display:none;visibility:hidden'>

<table style='position:absolute;width:70px;visibility:hidden' align=left
 cellpadding=0 cellspacing=0>
 <td nowrap>
 <div id="nb_ntsElem" align=center style='position:relative;padding:3px;
 font-family:Arial;color:buttontext;font-size:9pt'><img src="notes_flag.gif"
 border=0 id="notes_flag" style='display:none'><span style="mso-spacerun:
 yes">  </span>Notes</div>
 <div title="Show/Hide Notes" id="nb_nts" style='position:absolute;top:0%;
 left:0%;width:100%;height:100%'></div>
 </td>
</table>

<table style='position:relative' align=right cellpadding=0 cellspacing=0>
 <td>
 <div id="nb_sldshwBorder" style='position:absolute;left:-20px;width:20px;
 height:20px'>
 <div style='position:absolute;clip:rect(0px, 18px, 18px, 0px)'><img
 src=buttons.gif id="nb_sldshw" title="Full Screen Slide Show"
 style='position:relative;left:-254px'></div>
 </div>
 </td>
 <td>
 <div id="nb_voiceBorder" style='display:none;position:absolute;left:-40px;
 width:20px;height:20px'>
 <div style='position:absolute;clip:rect(0px, 18px, 18px, 0px)'><img
 src=buttons.gif id="nb_voice" title="Pause/Play Narration" style='position:
 relative;left:-290px'></div>
 </div>
 </td>
</table>

<table style='position:relative' align=center cellpadding=0 cellspacing=0>
 <td nowrap>
 <div id="nb_prevBorder" class=button style='left:-30px'>
 <div style='position:absolute;clip:rect(0px, 30px, 18px, 0px)'><img
 src=buttons.gif id="nb_prev" title="Previous Slide" style='position:relative;
 left:0px'></div>
 </div>
 <span id="nav_text" style='position:relative;top:3px;width:100px;font-family:
 Arial;color:buttontext;font-size:9pt'></span>
 <div id="nb_nextBorder" class=button>
 <div style='position:absolute;clip:rect(0px, 30px, 18px, 0px)'><img
 src=buttons.gif id="nb_next" title="Next Slide" style='position:relative;
 left:-90px'></div>
 </div>
 </td>
</table>

</div>

<div id=OtlNavObj onload="Load()" onmouseover="BtnOnOver()"
onmousedown="BtnOnDown()" onmouseout="BtnOnOut()" onmouseup="BtnOnUp()"
onkeypress="_KPH()" style='display:none;visibility:hidden'>

<table style='position:relative;width:70px' align=left cellpadding=0
 cellspacing=0>
 <td nowrap>
 <div id="nb_otlElem" align=center style='position:relative;padding:3px;
 font-family:Arial;color:buttontext;font-size:9pt'>Outline</div>
 <div title="Show/Hide Outline" id="nb_otl" style='position:absolute;
 top:0%;left:0%;width:100%;height:100%'></div>
 </td>
</table>

<table style='position:relative' align=center cellpadding=0 cellspacing=0>
 <td>
 <div style='position:absolute;left:-18px;width:24px;height:20px;border-style:
 solid;border-width:1px;border-color:threedface' id="nb_otlTxtBorder">
 <div style='position:absolute;clip:rect(0px, 22px, 18px, 0px)'><img
 src=buttons.gif id="nb_otlTxt" title="Expand/Collapse Outline"
 style='position:relative;left:-157px'></div>
 </div>
 </td>
</table>

</div>

<div id=OtlObj style='display:none;visibility:hidden'>

<table width="100%" style='font-family:Arial;font-size:9pt'>
 <tr>
  <td>
  <div id=PPTP1 class=PTxt><font size=2><a
  href="javascript:GoToSld('slide0001.htm');" onmouseover="Over(this)"
  id=PPTL1 onmouseout="Out(this)">Sorted Generalized Quantifiers in OpenMath</a></font></div>
  <div id=PPTC1 class=CTxt style='display:none'>
  <table style='color:white' id=PPTB1 class=CBorder>
   <tr>
    <td width=5 nowrap></td>
    <td width="100%"></td>
   </tr>
   <tr>
    <td colspan=1></td>
    <td colspan=1><font size=2>Andreas Strotmann</font></td>
   </tr>
   <tr>
    <td colspan=1></td>
    <td colspan=1><font size=2>Florida State University</font></td>
   </tr>
  </table>
  </div>
  </td>
 </tr>
 <tr>
  <td>
  <div id=PPTP2 class=PTxt><font size=2><a
  href="javascript:GoToSld('slide0055.htm');" onmouseover="Over(this)"
  id=PPTL2 onmouseout="Out(this)">Overview</a></font></div>
  <div id=PPTC2 class=CTxt style='display:none'>
  <table style='color:white' id=PPTB2 class=CBorder>
   <tr>
    <td width=5 nowrap></td>
    <td width=20 nowrap></td>
    <td width="100%"></td>
   </tr>
   <tr>
    <td colspan=1></td>
    <td colspan=2><font size=2>Introduction</font></td>
   </tr>
   <tr>
    <td colspan=1></td>
    <td colspan=2><font size=2>OpenMath Binders and Typed Variables</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=1><font size=2>Problems and possible solutions</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=1><font size=2>Scoping, currying, signatures, composition</font></td>
   </tr>
   <tr>
    <td colspan=1></td>
    <td colspan=2><font size=2>A Categorial Type Logic for OpenMath</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=1><font size=2>OMA, OMBIND, OMATTR (incl. type attribs)</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=1><font size=2>Application to typed-binder problems</font></td>
   </tr>
   <tr>
    <td colspan=1></td>
    <td colspan=2><font size=2>Conclusions - incl. quantifiers in OM CDs</font></td>
   </tr>
  </table>
  </div>
  </td>
 </tr>
 <tr>
  <td>
  <div id=PPTP3 class=PTxt><font size=2><a
  href="javascript:GoToSld('slide0002.htm');" onmouseover="Over(this)"
  id=PPTL3 onmouseout="Out(this)">Michael Kohlhases Posting</a></font></div>
  <div id=PPTC3 class=CTxt style='display:none'>
  <table style='color:white' id=PPTB3 class=CBorder>
   <tr>
    <td width=5 nowrap></td>
    <td width=20 nowrap></td>
    <td width="100%"></td>
   </tr>
   <tr>
    <td colspan=1></td>
    <td colspan=2><font size=2>Let us discuss sorted quantifiers!</font></td>
   </tr>
   <tr>
    <td colspan=1></td>
    <td colspan=2></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=1></td>
   </tr>
  </table>
  </div>
  </td>
 </tr>
 <tr>
  <td>
  <div id=PPTP4 class=PTxt><font size=2><a
  href="javascript:GoToSld('slide0026.htm');" onmouseover="Over(this)"
  id=PPTL4 onmouseout="Out(this)">Goal</a></font></div>
  <div id=PPTC4 class=CTxt style='display:none'>
  <table style='color:white' id=PPTB4 class=CBorder>
   <tr>
    <td width=5 nowrap></td>
    <td width=20 nowrap></td>
    <td width="100%"></td>
   </tr>
   <tr>
    <td colspan=1></td>
    <td colspan=2><font size=2>Find good guidelines for attaching type
    information to OM objects</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=1><font size=2>Compositional (with clean semantics)</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=1><font size=2>Conservative (compatible with exist. proposal)</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=1><font size=2>Complete (works for all OM objects)</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=1></td>
   </tr>
   <tr>
    <td colspan=1></td>
    <td colspan=2><font size=2>Focus on (generalized) quantifiers</font></td>
   </tr>
  </table>
  </div>
  </td>
 </tr>
 <tr>
  <td>
  <div id=PPTP5 class=PTxt><font size=2><a
  href="javascript:GoToSld('slide0027.htm');" onmouseover="Over(this)"
  id=PPTL5 onmouseout="Out(this)">Some Results</a></font></div>
  <div id=PPTC5 class=CTxt style='display:none'>
  <table style='color:white' id=PPTB5 class=CBorder>
   <tr>
    <td width=5 nowrap></td>
    <td width=20 nowrap></td>
    <td width=20 nowrap></td>
    <td width="100%"></td>
   </tr>
   <tr>
    <td colspan=1></td>
    <td colspan=3><font size=2>Requirements</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=2><font size=2>Clean scoping rules for OMbind objects</font></td>
   </tr>
   <tr>
    <td colspan=3></td>
    <td colspan=1><font size=2>OM Standard needs to be more precise</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=2><font size=2>Categorial type logic for all OM objects</font></td>
   </tr>
   <tr>
    <td colspan=3></td>
    <td colspan=1><font size=2>Extension of STS, simpler than ECC, pluggable</font></td>
   </tr>
   <tr>
    <td colspan=3></td>
    <td colspan=1><font size=2>corresponds to OpenMath Expression Layer</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=2><font size=2>Explicit distinction between type and range</font></td>
   </tr>
   <tr>
    <td colspan=3></td>
    <td colspan=1><font size=2>Difficult with single OMBind expression</font></td>
   </tr>
   <tr>
    <td colspan=1></td>
    <td colspan=3><font size=2>No revolution, but evolution needed</font></td>
   </tr>
  </table>
  </div>
  </td>
 </tr>
 <tr>
  <td>
  <div id=PPTP6 class=PTxt><font size=2><a
  href="javascript:GoToSld('slide0059.htm');" onmouseover="Over(this)"
  id=PPTL6 onmouseout="Out(this)">Overview</a></font></div>
  <div id=PPTC6 class=CTxt style='display:none'>
  <table style='color:white' id=PPTB6 class=CBorder>
   <tr>
    <td width=5 nowrap></td>
    <td width=20 nowrap></td>
    <td width="100%"></td>
   </tr>
   <tr>
    <td colspan=1></td>
    <td colspan=2><font size=2>Introduction</font></td>
   </tr>
   <tr>
    <td colspan=1></td>
    <td colspan=2><font size=2>OpenMath Binders and Typed Variables</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=1><font size=2>Problems and possible solutions</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=1><font size=2>Scoping, currying, signatures, composition</font></td>
   </tr>
   <tr>
    <td colspan=1></td>
    <td colspan=2><font size=2>A Categorial Type Logic for OpenMath</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=1><font size=2>OMA, OMBIND, OMATTR (incl. type attribs)</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=1><font size=2>Application to typed-binder problems</font></td>
   </tr>
   <tr>
    <td colspan=1></td>
    <td colspan=2><font size=2>Conclusions</font></td>
   </tr>
  </table>
  </div>
  </td>
 </tr>
 <tr>
  <td>
  <div id=PPTP7 class=PTxt><font size=2><a
  href="javascript:GoToSld('slide0028.htm');" onmouseover="Over(this)"
  id=PPTL7 onmouseout="Out(this)">A Scoping Rule for OMBIND</a></font></div>
  <div id=PPTC7 class=CTxt style='display:none'>
  <table style='color:white' id=PPTB7 class=CBorder>
   <tr>
    <td width=5 nowrap></td>
    <td width=20 nowrap></td>
    <td width="100%"></td>
   </tr>
   <tr>
    <td colspan=1></td>
    <td colspan=2><font size=2>Consider object OMBIND(q,v,e).<span
    style="mso-spacerun: yes">  </span>Then:<br>
    The scope of variable v is expression e.</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=1><font size=2>OM Standard is silent on this question. Add the
    above!</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=1><font size=2><span style="mso-spacerun: yes"> </span>Neither
    attributes of variables nor (possibly compound) quantifier q are inside vs
    scope.</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=1><font size=2>OM Standards OMBind currying rules complicate
    scoping rules a bit for multiple variables.</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=1><font size=2>Type expression for v not necessarily valid
    inside expression e (variable name clashes).</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=1><font size=2>However, crazy mix of scopes inside OMBind </font></td>
   </tr>
  </table>
  </div>
  </td>
 </tr>
 <tr>
  <td>
  <div id=PPTP8 class=PTxt><font size=2><a
  href="javascript:GoToSld('slide0052.htm');" onmouseover="Over(this)"
  id=PPTL8 onmouseout="Out(this)">Binder Scoping Problems</a></font></div>
  <div id=PPTC8 class=CTxt style='display:none'>
  <table style='color:white' id=PPTB8 class=CBorder>
   <tr>
    <td width=5 nowrap></td>
    <td width=20 nowrap></td>
    <td width="100%"></td>
   </tr>
   <tr>
    <td colspan=1></td>
    <td colspan=2><font size=2>Crazy mix of scopes in OMBIND</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=1><font size=2>bind(b:tb,x:tx,y:ty,e) <br>
    := bind(b:tb,x:tx,
    bind(b:tb,y:ty,e))</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=1><font size=2>OM Standard defines Currying: 3.5 scopes</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=1><font size=2>notice b:tb is both in and out of scope for x!!!</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=1><font size=2>Usually OK since constant types or binders</font></td>
   </tr>
   <tr>
    <td colspan=1></td>
    <td colspan=2><font size=2>Compositionality problem!</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=1><font size=2>What do we do about it?</font></td>
   </tr>
  </table>
  </div>
  </td>
 </tr>
 <tr>
  <td>
  <div id=PPTP9 class=PTxt><font size=2><a
  href="javascript:GoToSld('slide0053.htm');" onmouseover="Over(this)"
  id=PPTL9 onmouseout="Out(this)">Binder Scoping Solution:<br>
  Signatures</a></font></div>
  <div id=PPTC9 class=CTxt style='display:none'>
  <table style='color:white' id=PPTB9 class=CBorder>
   <tr>
    <td width=5 nowrap></td>
    <td width=20 nowrap></td>
    <td width=20 nowrap></td>
    <td width="100%"></td>
   </tr>
   <tr>
    <td colspan=1></td>
    <td colspan=3><font size=2>bind(b,x,y,e) : tb </font><font face=Symbol
    size=2>·</font><font face="Times New Roman" size=2> (te / ty / tx)</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=2><font size=2>signature expression assigns types to all
    components via simple structural type logic</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=2><font size=2>signature out of scope for all vars</font></td>
   </tr>
   <tr>
    <td colspan=3></td>
    <td colspan=1><font size=2>var renaming when crossing into scope boundaries</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=2><font size=2>Lambek-style categorial type system (see below)</font></td>
   </tr>
   <tr>
    <td colspan=3></td>
    <td colspan=1><font size=2>application (</font><font face=Symbol size=2>·</font><font
    face="Times New Roman" size=2>) and abstraction (maps-to, /) only</font></td>
   </tr>
   <tr>
    <td colspan=3></td>
    <td colspan=1><font size=2>define OMA,OMBIND,OMATTR using </font><font
    face=Symbol size=2>·</font><font face="Times New Roman" size=2> and / only</font></td>
   </tr>
   <tr>
    <td colspan=3></td>
    <td colspan=1><font size=2>support radical lexicalism (per-symbol type
    defs)</font></td>
   </tr>
   <tr>
    <td colspan=3></td>
    <td colspan=1><font size=2>doesnt need OMs binder-currying rule</font></td>
   </tr>
  </table>
  </div>
  </td>
 </tr>
 <tr>
  <td>
  <div id=PPTP10 class=PTxt><font size=2><a
  href="javascript:GoToSld('slide0029.htm');" onmouseover="Over(this)"
  id=PPTL10 onmouseout="Out(this)">Binder Signatures</a></font></div>
  <div id=PPTC10 class=CTxt style='display:none'>
  <table style='color:white' id=PPTB10 class=CBorder>
   <tr>
    <td width=5 nowrap></td>
    <td width=20 nowrap></td>
    <td width="100%"></td>
   </tr>
   <tr>
    <td colspan=1></td>
    <td colspan=2><font size=2>Quantifier takes truth function and returns
    truth value</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=1><font size=2>forall :<span style="mso-spacerun: yes"> 
    </span>(X </font><font face=Wingdings size=2>à</font><font
    face="Times New Roman" size=2> T) </font><font face=Wingdings size=2>à</font><font
    face="Times New Roman" size=2> T</font></td>
   </tr>
   <tr>
    <td colspan=1></td>
    <td colspan=2><font size=2>Generalized Quantifiers are similar</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=1><font size=2>the : (X </font><font face=Wingdings size=2>à</font><font
    face="Times New Roman" size=2> T) </font><font face=Wingdings size=2>à</font><font
    face="Times New Roman" size=2> X</font></td>
   </tr>
   <tr>
    <td colspan=1></td>
    <td colspan=2><font size=2>OMBind builds function and applies binder</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=1><font size=2>OMBind(b,v,e) == b(<span style="mso-spacerun:
    yes">  </span>(v </font><font face=Wingdings size=2>à</font><font
    face="Times New Roman" size=2> e)<span style="mso-spacerun: yes">  </span>)</font></td>
   </tr>
  </table>
  </div>
  </td>
 </tr>
 <tr>
  <td>
  <div id=PPTP11 class=PTxt><font size=2><a
  href="javascript:GoToSld('slide0031.htm');" onmouseover="Over(this)"
  id=PPTL11 onmouseout="Out(this)">OMBind and OMA</a></font></div>
  <div id=PPTC11 class=CTxt style='display:none'>
  <table style='color:white' id=PPTB11 class=CBorder>
   <tr>
    <td width=5 nowrap></td>
    <td width=20 nowrap></td>
    <td width="100%"></td>
   </tr>
   <tr>
    <td colspan=1></td>
    <td colspan=2><font size=2>OMBind(b,v,e) == apply(b,</font><font
    face=Symbol size=2>l</font><font face="Times New Roman" size=2>v.e)</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=1><font size=2>Any OM object accepting a unary function as its
    argument can be used as a binder</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=1><font size=2>Any binder can be used as an operator accepting
    a unary function as argument</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=1><font size=2>Binders can accept optional range argument when
    used as OMA(b,</font><font face=Symbol size=2>l</font><font
    face="Times New Roman" size=2>v.e,r)</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=1><font size=2>set-of takes two functions, can only do OMA</font></td>
   </tr>
   <tr>
    <td colspan=1></td>
    <td colspan=2><font size=2>STS easily adjusted to this interpretation</font></td>
   </tr>
   <tr>
    <td colspan=1></td>
    <td colspan=2><font size=2>Simpler and more general than ECC, where OMBind(b,v:t,e)==apply(b,t,(v:t
    </font><font face=Wingdings size=2>à</font><font face="Times New Roman"
    size=2> e))</font></td>
   </tr>
  </table>
  </div>
  </td>
 </tr>
 <tr>
  <td>
  <div id=PPTP12 class=PTxt><font size=2><a
  href="javascript:GoToSld('slide0030.htm');" onmouseover="Over(this)"
  id=PPTL12 onmouseout="Out(this)">Compound Binders</a></font></div>
  <div id=PPTC12 class=CTxt style='display:none'>
  <table style='color:white' id=PPTB12 class=CBorder>
   <tr>
    <td width=5 nowrap></td>
    <td width=20 nowrap></td>
    <td width="100%"></td>
   </tr>
   <tr>
    <td colspan=1></td>
    <td colspan=2><font size=2>=&gt; can allow compound binders, e.g. annotated
    with type information (i.e. signature)</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=1><font size=2>Example: Exists Uniquely as a compound binder</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=1><font size=2>&#9;</font><font face=Symbol size=2>$</font><font
    face="Times New Roman" size=2>!<span style="mso-spacerun: yes">   </span></font><font
    face=Symbol size=2>º</font><font face="Times New Roman" size=2><span
    style="mso-spacerun: yes">  </span><span style="mso-spacerun:
    yes"> </span>&#955;P.<span style="mso-spacerun: yes">  </span>(</font><font
    face=Symbol size=2>$</font><font face="Times New Roman" size=2>x. P(x)) </font><font
    face=Symbol size=2>Ù</font><font face="Times New Roman" size=2> (</font><font
    face=Symbol size=2>&quot;</font><font face="Times New Roman" size=2>y,z.
    (P(y) </font><font face=Symbol size=2>Ù</font><font face="Times New Roman"
    size=2> P(z)) </font><font face=Symbol size=2>Þ</font><font
    face="Times New Roman" size=2> y = z)</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=1><font size=2>OMB( OMB(lambda, OMV(P),</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=1><font size=2><span style="mso-spacerun: yes">        
    </span>OMA(and, OMB(exists, OMV(x), OMA(OMV(P),OMV(x))),</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=1><font size=2><span style="mso-spacerun:
    yes">                  </span>OMB(forall, OMV(y), OMV(z),</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=1><font size=2><span style="mso-spacerun:
    yes">                      </span>OMA(implies,</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=1><font size=2><span style="mso-spacerun:
    yes">                          </span>OMA(and, OMA(OMV(P),OMV(y)),</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=1><font size=2><span style="mso-spacerun:
    yes">                                   </span>OMA(OMV(P),OMV(z))),</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=1><font size=2><span style="mso-spacerun:
    yes">                          </span>OMA(equal, OMV(y), OMV(z)) )))),</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=1><font size=2><span style="mso-spacerun: yes">    
    </span>OMV(n),</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=1><font size=2><span style="mso-spacerun: yes">    
    </span>OMA(equal, OMI(0), OMA(power, OMV(n), OMI(4)) ))</font></td>
   </tr>
  </table>
  </div>
  </td>
 </tr>
 <tr>
  <td>
  <div id=PPTP13 class=PTxt><font size=2><a
  href="javascript:GoToSld('slide0056.htm');" onmouseover="Over(this)"
  id=PPTL13 onmouseout="Out(this)">Overview</a></font></div>
  <div id=PPTC13 class=CTxt style='display:none'>
  <table style='color:white' id=PPTB13 class=CBorder>
   <tr>
    <td width=5 nowrap></td>
    <td width=20 nowrap></td>
    <td width="100%"></td>
   </tr>
   <tr>
    <td colspan=1></td>
    <td colspan=2><font size=2>Introduction</font></td>
   </tr>
   <tr>
    <td colspan=1></td>
    <td colspan=2><font size=2>OpenMath Binders and Typed Variables</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=1><font size=2>Problems and possible solutions</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=1><font size=2>Scoping, currying, signatures, composition</font></td>
   </tr>
   <tr>
    <td colspan=1></td>
    <td colspan=2><font size=2>A Categorial Type Logic for OpenMath</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=1><font size=2>OMA, OMBIND, OMATTR (incl. type attribs)</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=1><font size=2>Application to typed-binder problems</font></td>
   </tr>
   <tr>
    <td colspan=1></td>
    <td colspan=2><font size=2>Conclusions</font></td>
   </tr>
  </table>
  </div>
  </td>
 </tr>
 <tr>
  <td>
  <div id=PPTP14 class=PTxt><font size=2><a
  href="javascript:GoToSld('slide0032.htm');" onmouseover="Over(this)"
  id=PPTL14 onmouseout="Out(this)">Categorial types</a></font></div>
  <div id=PPTC14 class=CTxt style='display:none'>
  <table style='color:white' id=PPTB14 class=CBorder>
   <tr>
    <td width=5 nowrap></td>
    <td width=20 nowrap></td>
    <td width="100%"></td>
   </tr>
   <tr>
    <td colspan=1></td>
    <td colspan=2><font size=2>Notation due to Lambek</font></td>
   </tr>
   <tr>
    <td colspan=1></td>
    <td colspan=2><font size=2>Abstraction A/B  returns something of type A if
    given argument of type B</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=1><font size=2>STS mapsto(B,A);<span style="mso-spacerun:
    yes">   </span>vernacular<span style="mso-spacerun: yes">  </span>A<sup>B</sup></font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=1><font size=2>A/B/C/D : three args</font></td>
   </tr>
   <tr>
    <td colspan=1></td>
    <td colspan=2><font size=2>Application A</font><font face=Symbol size=2>·</font><font
    face="Times New Roman" size=2>B  something of type A applied to an
    argument of type B</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=1><font size=2><span style="mso-spacerun: yes"> </span>STS
    application(A,B);<span style="mso-spacerun: yes">  
    </span>vernacular<span style="mso-spacerun: yes">         </span>??)</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=1><font size=2>(A/B/C/D) </font><font face=Symbol size=2>·</font><font
    face="Times New Roman" size=2> D </font><font face=Symbol size=2>·</font><font
    face="Times New Roman" size=2> C </font><font face=Symbol size=2>·</font><font
    face="Times New Roman" size=2> B<span style="mso-spacerun: yes"> 
    </span>simplifies to type A</font></td>
   </tr>
   <tr>
    <td colspan=1></td>
    <td colspan=2><font size=2>Plug in any type system (e.g. ECC) for atoms</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=1><font size=2>Hence categorial semantics / type logic</font></td>
   </tr>
  </table>
  </div>
  </td>
 </tr>
 <tr>
  <td>
  <div id=PPTP15 class=PTxt><font size=2><a
  href="javascript:GoToSld('slide0033.htm');" onmouseover="Over(this)"
  id=PPTL15 onmouseout="Out(this)">Categorial Semantics for OpenMath : OMA</a></font></div>
  <div id=PPTC15 class=CTxt style='display:none'>
  <table style='color:white' id=PPTB15 class=CBorder>
   <tr>
    <td width=5 nowrap></td>
    <td width=20 nowrap></td>
    <td width=20 nowrap></td>
    <td width="100%"></td>
   </tr>
   <tr>
    <td colspan=1></td>
    <td colspan=3><font size=2>Application works like STS</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=2><font size=2>apply(a,b<sub>1</sub>,,b<sub>n</sub>) is type A
    </font><font face=Symbol size=2>·</font><font face="Times New Roman"
    size=2> B<sub>n</sub> </font><font face=Symbol size=2>·</font><font
    face="Times New Roman" size=2>  </font><font face=Symbol size=2>·</font><font
    face="Times New Roman" size=2> B<sub>1</sub></font></td>
   </tr>
   <tr>
    <td colspan=1></td>
    <td colspan=3><font size=2>Per-symbol type assignments (lexicalism)</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=2><font size=2>type(sin) = C/C, </font></td>
   </tr>
   <tr>
    <td colspan=3></td>
    <td colspan=1><font size=2>Type symbol C plugged in from specific type
    system</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=2><font size=2>type(plus) = C/</font><font face=Symbol size=2><sub>w</sub></font><font
    face="Times New Roman" size=2>C, </font></td>
   </tr>
   <tr>
    <td colspan=3></td>
    <td colspan=1><font size=2>/</font><font face=Symbol size=2><sub>w</sub></font><font
    face="Times New Roman" size=2> syntactic sugar for n-ary abstraction</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=2><font size=2>type(list) = U</font><font face=Symbol size=2><sup>w</sup></font><font
    face="Times New Roman" size=2>/</font><font face=Symbol size=2><sub>w</sub></font><font
    face="Times New Roman" size=2>U, </font></td>
   </tr>
   <tr>
    <td colspan=3></td>
    <td colspan=1><font size=2>power type constructor plugged in from
    specific type system</font></td>
   </tr>
   <tr>
    <td colspan=3></td>
    <td colspan=1><font size=2>Type symbol U (universe) plugged in from
    outside</font></td>
   </tr>
  </table>
  </div>
  </td>
 </tr>
 <tr>
  <td>
  <div id=PPTP16 class=PTxt><font size=2><a
  href="javascript:GoToSld('slide0039.htm');" onmouseover="Over(this)"
  id=PPTL16 onmouseout="Out(this)">Categorial Semantics for OpenMath : OMBIND</a></font></div>
  <div id=PPTC16 class=CTxt style='display:none'>
  <table style='color:white' id=PPTB16 class=CBorder>
   <tr>
    <td width=5 nowrap></td>
    <td width=20 nowrap></td>
    <td width=20 nowrap></td>
    <td width="100%"></td>
   </tr>
   <tr>
    <td colspan=1></td>
    <td colspan=3><font size=2>bind(a,v,e) is type A </font><font face=Symbol
    size=2>·</font><font face="Times New Roman" size=2> (E/V)</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=2><font size=2>Different from STS and ECC (but similar!)</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=2><font size=2>Note that OM defines currying rule for bind</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=2><font size=2>Binders are therefore generally of type Y/(E/V)</font></td>
   </tr>
   <tr>
    <td colspan=1></td>
    <td colspan=3><font size=2>Per-binder type assignments (lexicalism)</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=2><font size=2>type(lambda) = (X/X) or = ((X/Y)/(X/Y))</font></td>
   </tr>
   <tr>
    <td colspan=3></td>
    <td colspan=1><font size=2>(X/X) </font><font face=Symbol size=2>·</font><font
    face="Times New Roman" size=2> (E/V) = ((E/V)/(E/V)) </font><font
    face=Symbol size=2>·</font><font face="Times New Roman" size=2> (E/V) = E/V</font></td>
   </tr>
   <tr>
    <td colspan=3></td>
    <td colspan=1><font size=2>Note meta type variables and unification</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=2><font size=2>type(forall) = 2/(2/X)</font></td>
   </tr>
   <tr>
    <td colspan=3></td>
    <td colspan=1><font size=2>With type 2 (boolean) plugged in from
    outside</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=2><font size=2>type(the) = (X/(2/X))</font></td>
   </tr>
  </table>
  </div>
  </td>
 </tr>
 <tr>
  <td>
  <div id=PPTP17 class=PTxt><font size=2><a
  href="javascript:GoToSld('slide0040.htm');" onmouseover="Over(this)"
  id=PPTL17 onmouseout="Out(this)">Categorial Semantics for OpenMath : OMATTR</a></font></div>
  <div id=PPTC17 class=CTxt style='display:none'>
  <table style='color:white' id=PPTB17 class=CBorder>
   <tr>
    <td width=5 nowrap></td>
    <td width=20 nowrap></td>
    <td width=20 nowrap></td>
    <td width="100%"></td>
   </tr>
   <tr>
    <td colspan=1></td>
    <td colspan=3><font size=2>attribution(a=b,e) is type (A </font><font
    face=Symbol size=2>·</font><font face="Times New Roman" size=2> B) </font><font
    face=Symbol size=2>·</font><font face="Times New Roman" size=2> E</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=2><font size=2>very different from ECC and STS</font></td>
   </tr>
   <tr>
    <td colspan=1></td>
    <td colspan=3><font size=2>Per-attribute-symbol type assignment</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=2><font size=2>type(type) = (T / X) / T</font></td>
   </tr>
   <tr>
    <td colspan=3></td>
    <td colspan=1><font size=2>Converter to type T given a descriptor for type
    T</font></td>
   </tr>
   <tr>
    <td colspan=3></td>
    <td colspan=1><font size=2>No type of types defined here</font></td>
   </tr>
   <tr>
    <td colspan=3></td>
    <td colspan=1><font size=2>Open question: define    where?</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=2><font size=2>type(typeset_as) = ( X/X ) / Y<span
    style="mso-spacerun: yes">  </span>(the default?)</font></td>
   </tr>
   <tr>
    <td colspan=3></td>
    <td colspan=1><font size=2>(((X/X)/Y) </font><font face=Symbol size=2>·</font><font
    face="Times New Roman" size=2>bold) </font><font face=Symbol size=2>·</font><font
    face="Times New Roman" size=2>R = (X/X) </font><font face=Symbol size=2>·</font><font
    face="Times New Roman" size=2>R = (R/R) </font><font face=Symbol size=2>·</font><font
    face="Times New Roman" size=2>R = R</font></td>
   </tr>
   <tr>
    <td colspan=3></td>
    <td colspan=1></td>
   </tr>
  </table>
  </div>
  </td>
 </tr>
 <tr>
  <td>
  <div id=PPTP18 class=PTxt><font size=2><a
  href="javascript:GoToSld('slide0057.htm');" onmouseover="Over(this)"
  id=PPTL18 onmouseout="Out(this)">Overview</a></font></div>
  <div id=PPTC18 class=CTxt style='display:none'>
  <table style='color:white' id=PPTB18 class=CBorder>
   <tr>
    <td width=5 nowrap></td>
    <td width=20 nowrap></td>
    <td width="100%"></td>
   </tr>
   <tr>
    <td colspan=1></td>
    <td colspan=2><font size=2>Introduction</font></td>
   </tr>
   <tr>
    <td colspan=1></td>
    <td colspan=2><font size=2>OpenMath Binders and Typed Variables</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=1><font size=2>Problems and possible solutions</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=1><font size=2>Scoping, currying, signatures, composition</font></td>
   </tr>
   <tr>
    <td colspan=1></td>
    <td colspan=2><font size=2>A Categorial Type Logic for OpenMath</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=1><font size=2>OMA, OMBIND, OMATTR (incl. type attribs)</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=1><font size=2>Application to typed-binder problems</font></td>
   </tr>
   <tr>
    <td colspan=1></td>
    <td colspan=2><font size=2>Conclusions - incl. quantifiers in OM CDs</font></td>
   </tr>
  </table>
  </div>
  </td>
 </tr>
 <tr>
  <td>
  <div id=PPTP19 class=PTxt><font size=2><a
  href="javascript:GoToSld('slide0042.htm');" onmouseover="Over(this)"
  id=PPTL19 onmouseout="Out(this)">Styles of Type Assignment in Mathematical
  Vernacular</a></font></div>
  <div id=PPTC19 class=CTxt style='display:none'>
  <table style='color:white' id=PPTB19 class=CBorder>
   <tr>
    <td width=5 nowrap></td>
    <td width="100%"></td>
   </tr>
   <tr>
    <td colspan=1></td>
    <td colspan=1><font size=2>Direct type assignment: </font><font
    face=Symbol size=2>Î</font><font size=2> notation</font></td>
   </tr>
   <tr>
    <td colspan=1></td>
    <td colspan=1></td>
   </tr>
   <tr>
    <td colspan=1></td>
    <td colspan=1><font size=2>Semi-direct type assignment: </font><font
    face=Symbol size=2>Î</font><font size=2> notation with tuples and
    Cartesian products</font></td>
   </tr>
   <tr>
    <td colspan=1></td>
    <td colspan=1></td>
   </tr>
   <tr>
    <td colspan=1></td>
    <td colspan=1><font size=2>Indirect type assignment from signature</font></td>
   </tr>
  </table>
  </div>
  </td>
 </tr>
 <tr>
  <td>
  <div id=PPTP20 class=PTxt><font size=2><a
  href="javascript:GoToSld('slide0044.htm');" onmouseover="Over(this)"
  id=PPTL20 onmouseout="Out(this)">Direct Type Assignment</a></font></div>
  <div id=PPTC20 class=CTxt style='display:none'>
  <table style='color:white' id=PPTB20 class=CBorder>
   <tr>
    <td width=5 nowrap></td>
    <td width=20 nowrap></td>
    <td width=20 nowrap></td>
    <td width="100%"></td>
   </tr>
   <tr>
    <td colspan=1></td>
    <td colspan=3></td>
   </tr>
   <tr>
    <td colspan=1></td>
    <td colspan=3></td>
   </tr>
   <tr>
    <td colspan=1></td>
    <td colspan=3><font size=2>Composition of notation:</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=2><font size=2>Quantifier</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=2><font size=2>Variable with type/range annotation</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=2><font size=2>Scope of variable ( expression )</font></td>
   </tr>
   <tr>
    <td colspan=1></td>
    <td colspan=3><font size=2>Compositional semantics</font></td>
   </tr>
   <tr>
    <td colspan=3></td>
    <td colspan=1><font size=2>(2/(2/Z))</font><font face=Symbol size=2>·</font><font
    face="Times New Roman" size=2>(2/((((T/Y)/T)</font><font face=Symbol
    size=2>·</font><font size=2>R)</font><font face=Symbol size=2>·</font><font
    face="Times New Roman" size=2>X))=(2/(2/R)) </font><font face=Symbol
    size=2>·</font><font face="Times New Roman" size=2>(2/R)</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=2><font size=2>intensional interpretation, extensional notation</font></td>
   </tr>
  </table>
  </div>
  </td>
 </tr>
 <tr>
  <td>
  <div id=PPTP21 class=PTxt><font size=2><a
  href="javascript:GoToSld('slide0045.htm');" onmouseover="Over(this)"
  id=PPTL21 onmouseout="Out(this)">Semi-direct type assignment</a></font></div>
  <div id=PPTC21 class=CTxt style='display:none'>
  <table style='color:white' id=PPTB21 class=CBorder>
   <tr>
    <td width=5 nowrap></td>
    <td width=20 nowrap></td>
    <td width=20 nowrap></td>
    <td width="100%"></td>
   </tr>
   <tr>
    <td colspan=1></td>
    <td colspan=3></td>
   </tr>
   <tr>
    <td colspan=1></td>
    <td colspan=3></td>
   </tr>
   <tr>
    <td colspan=1></td>
    <td colspan=3><font size=2>Composition of notation:</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=2><font size=2>Constructor (generalized quantifier) {|}</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=2><font size=2>Complex type/range/compose constructor</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=2><font size=2>Conditional expression</font></td>
   </tr>
   <tr>
    <td colspan=3></td>
    <td colspan=1><font size=2>(2<sup>Y</sup>/(2/X)/(Y/X))</font><font
    face=Symbol size=2>·</font><font face="Times New Roman" size=2>((T/Z/T)</font><font
    face=Symbol size=2>·</font><font size=2>(N</font><font face=Symbol size=2><sup>w</sup></font><font
    face="Times New Roman" size=2>)</font><font face=Symbol size=2>·</font><font
    face="Times New Roman" size=2>W</font><font face=Symbol size=2><sup>w</sup></font><font
    face="Times New Roman" size=2>)/</font><font face=Symbol size=2><sub>w</sub></font><font
    face="Times New Roman" size=2>U)</font><font face=Symbol size=2>·</font><font
    face="Times New Roman" size=2>(2/</font><font face=Symbol size=2><sub>w</sub></font><font
    face="Times New Roman" size=2>N) <br>
    = 2<sup>N</sup></font><font
    face=Symbol size=2><sup>w</sup></font></td>
   </tr>
   <tr>
    <td colspan=3></td>
    <td colspan=1><font face="Times New Roman" size=2>=&gt; set-of cannot be
    done as a binder (w/ this signat.)</font></td>
   </tr>
  </table>
  </div>
  </td>
 </tr>
 <tr>
  <td>
  <div id=PPTP22 class=PTxt><font size=2><a
  href="javascript:GoToSld('slide0046.htm');" onmouseover="Over(this)"
  id=PPTL22 onmouseout="Out(this)">Indirect type assignment</a></font></div>
  <div id=PPTC22 class=CTxt style='display:none'>
  <table style='color:white' id=PPTB22 class=CBorder>
   <tr>
    <td width=5 nowrap></td>
    <td width=20 nowrap></td>
    <td width="100%"></td>
   </tr>
   <tr>
    <td colspan=1></td>
    <td colspan=2></td>
   </tr>
   <tr>
    <td colspan=1></td>
    <td colspan=2></td>
   </tr>
   <tr>
    <td colspan=1></td>
    <td colspan=2><font size=2>Composition of notation:</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=1><font size=2>Function variable (f)</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=1><font size=2>Signature for function</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=1><font size=2>Un-typed lambda expression</font></td>
   </tr>
   <tr>
    <td colspan=1></td>
    <td colspan=2><font size=2>Compositional semantics</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=1><font size=2>((T/W)/T) </font><font face=Symbol size=2>·</font><font
    face="Times New Roman" size=2> (R/R/R) </font><font face=Symbol size=2>·</font><font
    face="Times New Roman" size=2> (((C/C/C) </font><font face=Symbol size=2>·</font><font
    face="Times New Roman" size=2> Y </font><font face=Symbol size=2>·</font><font
    face="Times New Roman" size=2> X)/X/Y) <br>
    = R/R/R</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=1><font size=2>X=Y=C, =R with plugged-in type system for
    R&lt;C</font></td>
   </tr>
  </table>
  </div>
  </td>
 </tr>
 <tr>
  <td>
  <div id=PPTP23 class=PTxt><font size=2><a
  href="javascript:GoToSld('slide0054.htm');" onmouseover="Over(this)"
  id=PPTL23 onmouseout="Out(this)">Binder Scoping Solution:<br>
  Categorial Signatures</a></font></div>
  <div id=PPTC23 class=CTxt style='display:none'>
  <table style='color:white' id=PPTB23 class=CBorder>
   <tr>
    <td width=5 nowrap></td>
    <td width=20 nowrap></td>
    <td width=20 nowrap></td>
    <td width="100%"></td>
   </tr>
   <tr>
    <td colspan=1></td>
    <td colspan=3><font size=2>bind(b,x,y,e) : tb </font><font face=Symbol
    size=2>·</font><font face="Times New Roman" size=2> ((tb </font><font
    face=Symbol size=2>·</font><font face="Times New Roman" size=2> (te/ty)) /
    tx)</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=2><font size=2>signature expression assigns types to all
    components via categorial type logic</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=2><font size=2>signature out of scope for all vars</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=2><font size=2>Note </font><font face=Symbol size=2>·</font><font
    size=2> necessary to assign type into bind</font></td>
   </tr>
   <tr>
    <td colspan=3></td>
    <td colspan=1><font size=2>bind(forall,v,e) : 2 <br>
    vs
    bind(forall,v,e) : (2/(2/X))</font><font face=Symbol size=2>·</font><font
    face="Times New Roman" size=2>(E/V)</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=2><font size=2>Signatures the way to type bound variables ?!?</font></td>
   </tr>
   <tr>
    <td colspan=1></td>
    <td colspan=3><font size=2>Multiple scopes for b still a problem, though</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=2><font size=2>remove currying rule for OMBIND???</font></td>
   </tr>
  </table>
  </div>
  </td>
 </tr>
 <tr>
  <td>
  <div id=PPTP24 class=PTxt><font size=2><a
  href="javascript:GoToSld('slide0043.htm');" onmouseover="Over(this)"
  id=PPTL24 onmouseout="Out(this)">Type vs. Range</a></font></div>
  <div id=PPTC24 class=CTxt style='display:none'>
  <table style='color:white' id=PPTB24 class=CBorder>
   <tr>
    <td width=5 nowrap></td>
    <td width=20 nowrap></td>
    <td width="100%"></td>
   </tr>
   <tr>
    <td colspan=1></td>
    <td colspan=2><font size=2>Extensional notation is ambiguous</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=1><font size=2>Range of quantification vs. type of variable</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=1><font size=2>OpenMath resolved ambiguity in favor of range
    interpretation in definite integration</font></td>
   </tr>
   <tr>
    <td colspan=1></td>
    <td colspan=2><font size=2>Generalized quantifiers will need none, one OR
    both of type/range in addition to body</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=1><font size=2>None:<span style="mso-spacerun: yes"> 
    </span>bind(q,v,e);<span style="mso-spacerun: yes">        </span>Type:
    bind(q,v:t,e)</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=1><font size=2>Range: apply(q,</font><font face=Symbol size=2>l</font><font
    face="Times New Roman" size=2>v.e,r);<span style="mso-spacerun: yes"> 
    </span>Both: apply(q,</font><font face=Symbol size=2>l</font><font
    face="Times New Roman" size=2>v:t.e,r)</font></td>
   </tr>
  </table>
  </div>
  </td>
 </tr>
 <tr>
  <td>
  <div id=PPTP25 class=PTxt><font size=2><a
  href="javascript:GoToSld('slide0058.htm');" onmouseover="Over(this)"
  id=PPTL25 onmouseout="Out(this)">Overview</a></font></div>
  <div id=PPTC25 class=CTxt style='display:none'>
  <table style='color:white' id=PPTB25 class=CBorder>
   <tr>
    <td width=5 nowrap></td>
    <td width=20 nowrap></td>
    <td width="100%"></td>
   </tr>
   <tr>
    <td colspan=1></td>
    <td colspan=2><font size=2>Introduction</font></td>
   </tr>
   <tr>
    <td colspan=1></td>
    <td colspan=2><font size=2>OpenMath Binders and Typed Variables</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=1><font size=2>Problems and possible solutions</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=1><font size=2>Scoping, currying, signatures, composition</font></td>
   </tr>
   <tr>
    <td colspan=1></td>
    <td colspan=2><font size=2>A Categorial Type Logic for OpenMath</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=1><font size=2>OMA, OMBIND, OMATTR (incl. type attribs)</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=1><font size=2>Application to typed-binder problems</font></td>
   </tr>
   <tr>
    <td colspan=1></td>
    <td colspan=2><font size=2>Conclusions - incl. quantifiers in OM CDs</font></td>
   </tr>
  </table>
  </div>
  </td>
 </tr>
 <tr>
  <td>
  <div id=PPTP26 class=PTxt><font size=2><a
  href="javascript:GoToSld('slide0047.htm');" onmouseover="Over(this)"
  id=PPTL26 onmouseout="Out(this)">Categorial Type System: Summary</a></font></div>
  <div id=PPTC26 class=CTxt style='display:none'>
  <table style='color:white' id=PPTB26 class=CBorder>
   <tr>
    <td width=5 nowrap></td>
    <td width=20 nowrap></td>
    <td width=20 nowrap></td>
    <td width="100%"></td>
   </tr>
   <tr>
    <td colspan=1></td>
    <td colspan=3><font size=2>Categorial type system is possible and useful
    for OpenMath</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=2><font size=2>factors out structural semantics common to all</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=2><font size=2>supports radical lexicalism</font></td>
   </tr>
   <tr>
    <td colspan=3></td>
    <td colspan=1><font size=2>type logic on atoms is orthogonal, pluggable</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=2><font size=2>both coarse and fine grained types/signatures</font></td>
   </tr>
   <tr>
    <td colspan=3></td>
    <td colspan=1><font size=2>similar to parallel content/presentation options</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=2><font size=2>modifies both STS and ECC, slightly</font></td>
   </tr>
  </table>
  </div>
  </td>
 </tr>
 <tr>
  <td>
  <div id=PPTP27 class=PTxt><font size=2><a
  href="javascript:GoToSld('slide0050.htm');" onmouseover="Over(this)"
  id=PPTL27 onmouseout="Out(this)">Conclusions</a></font></div>
  <div id=PPTC27 class=CTxt style='display:none'>
  <table style='color:white' id=PPTB27 class=CBorder>
   <tr>
    <td width=5 nowrap></td>
    <td width=20 nowrap></td>
    <td width="100%"></td>
   </tr>
   <tr>
    <td colspan=1></td>
    <td colspan=2><font size=2>Formal Linguistics provides useful tools</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=1><font size=2>Categorial Semantics (= OM expression layer!)</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=1><font size=2>Compositionality considerations</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=1><font size=2>Scoping analyses</font></td>
   </tr>
   <tr>
    <td colspan=1></td>
    <td colspan=2><font size=2>Generalized quantifiers in OpenMath CDs</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=1><font size=2>always define binders as operators, too</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=1><font size=2>always add type/range-disambiguated version</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=1><font size=2>some GQs cannot be defined as binders (set-of)</font></td>
   </tr>
  </table>
  </div>
  </td>
 </tr>
 <tr>
  <td>
  <div id=PPTP28 class=PTxt><font size=2><a
  href="javascript:GoToSld('slide0051.htm');" onmouseover="Over(this)"
  id=PPTL28 onmouseout="Out(this)">Conclusions and Questions</a></font></div>
  <div id=PPTC28 class=CTxt style='display:none'>
  <table style='color:white' id=PPTB28 class=CBorder>
   <tr>
    <td width=5 nowrap></td>
    <td width=20 nowrap></td>
    <td width=20 nowrap></td>
    <td width="100%"></td>
   </tr>
   <tr>
    <td colspan=1></td>
    <td colspan=3><font size=2>Sorted generalized quantifiers</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=2><font size=2>assign types to bound variables via signature</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=2><font size=2>then use distribution laws with var renaming
    to infer correct direct type assignment</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=2><font size=2>need to discuss scoping problem of currying rule
    for OMBIND wrt compound binders</font></td>
   </tr>
   <tr>
    <td colspan=3></td>
    <td colspan=1><font size=2>revoke currying rule?? Restrict form of
    binders??</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=2><font size=2>Categorial type theory is very useful here</font></td>
   </tr>
   <tr>
    <td colspan=3></td>
    <td colspan=1><font size=2>develop &amp; standardize??</font></td>
   </tr>
  </table>
  </div>
  </td>
 </tr>
 <tr>
  <td>
  <div id=PPTP29 class=PTxt><font size=2><a
  href="javascript:GoToSld('slide0022.htm');" onmouseover="Over(this)"
  id=PPTL29 onmouseout="Out(this)">Bibliography</a></font></div>
  <div id=PPTC29 class=CTxt style='display:none'>
  <table style='color:white' id=PPTB29 class=CBorder>
   <tr>
    <td width=5 nowrap></td>
    <td width=20 nowrap></td>
    <td width=20 nowrap></td>
    <td width="100%"></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=2><font size=2>Handbook of Logic and Language (vanBenthem,
    terMeulen eds.)</font></td>
   </tr>
   <tr>
    <td colspan=3></td>
    <td colspan=1><font size=2>Categorial Type Logics (Moortgat)</font></td>
   </tr>
   <tr>
    <td colspan=3></td>
    <td colspan=1><font size=2>Compositionality (Janssen)</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=2><font size=2>The Expression Layer (Strotmann; slides, Bath OM
    Workshop)</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=2><font size=2>A Small OpenMath Type System (Davenport)</font></td>
   </tr>
   <tr>
    <td colspan=2></td>
    <td colspan=2><font size=2>A Type System for OpenMath (Caprotti, Cohen)</font></td>
   </tr>
  </table>
  </div>
  </td>
 </tr>
</table>

</div>

</body>

</html>
