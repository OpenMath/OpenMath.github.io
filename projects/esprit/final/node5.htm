
<!--Converted with LaTeX2HTML 99.1 release (March 30, 1999)
original version by:  Nikos Drakos, CBLU, University of Leeds
* revised and updated by:  Marcus Hennecke, Ross Moore, Herb Swan
* with significant contributions from:
  Jens Lippmann, Marek Rouchal, Martin Wilck and others -->
<HTML>
<HEAD>
<TITLE>The OpenMath Standard</TITLE>
<META NAME="description" CONTENT="The OpenMath Standard">
<META NAME="keywords" CONTENT="final">
<META NAME="resource-type" CONTENT="document">
<META NAME="distribution" CONTENT="global">

<META HTTP-EQUIV="Content-Type" CONTENT="text/html; charset=iso-8859-1">
<META NAME="Generator" CONTENT="LaTeX2HTML v99.1 release">
<META HTTP-EQUIV="Content-Style-Type" CONTENT="text/css">

<LINK REL="STYLESHEET" HREF="final.css">

<LINK REL="next" HREF="node6.htm">
<LINK REL="previous" HREF="node4.htm">
<LINK REL="up" HREF="final.htm">
<LINK REL="next" HREF="node6.htm">
</HEAD>

<BODY BGCOLOR="#FFFFFF">
<!--Navigation Panel-->
<A NAME="tex2html144"
 HREF="node6.htm">
<IMG WIDTH="37" HEIGHT="24" ALIGN="BOTTOM" BORDER="0" ALT="next" SRC="next_motif.gif"></A> 
<A NAME="tex2html140"
 HREF="final.htm">
<IMG WIDTH="26" HEIGHT="24" ALIGN="BOTTOM" BORDER="0" ALT="up" SRC="up_motif.gif"></A> 
<A NAME="tex2html134"
 HREF="node4.htm">
<IMG WIDTH="63" HEIGHT="24" ALIGN="BOTTOM" BORDER="0" ALT="previous" SRC="previous_motif.gif"></A> 
<A NAME="tex2html142"
 HREF="node1.htm">
<IMG WIDTH="65" HEIGHT="24" ALIGN="BOTTOM" BORDER="0" ALT="contents" SRC="contents_motif.gif"></A>  
<BR>
<B> Next:</B> <A NAME="tex2html145"
 HREF="node6.htm">OpenMath and MathML</A>
<B> Up:</B> <A NAME="tex2html141"
 HREF="final.htm">The OpenMath Project Final</A>
<B> Previous:</B> <A NAME="tex2html135"
 HREF="node4.htm">Technical Summary</A>
 &nbsp <B>  <A NAME="tex2html143"
 HREF="node1.htm">Contents</A></B> 
<BR>
<BR>
<!--End of Navigation Panel-->
<!--Table of Child-Links-->
<A NAME="CHILD_LINKS"><STRONG>Subsections</STRONG></A>

<UL>
<LI><A NAME="tex2html146"
 HREF="node5.htm#SECTION00510000000000000000">OpenMath Architecture</A>
<LI><A NAME="tex2html147"
 HREF="node5.htm#SECTION00520000000000000000">OpenMath Objects</A>
<LI><A NAME="tex2html148"
 HREF="node5.htm#SECTION00530000000000000000">OpenMath Encodings</A>
<LI><A NAME="tex2html149"
 HREF="node5.htm#SECTION00540000000000000000">OpenMath Content Dictionaries</A>
<UL>
<LI><A NAME="tex2html150"
 HREF="node5.htm#SECTION00541000000000000000">Signatures</A>
<UL>
<LI><A NAME="tex2html151"
 HREF="node5.htm#SECTION00541100000000000000">Light-weight Simple Type System</A>
<LI><A NAME="tex2html152"
 HREF="node5.htm#SECTION00541200000000000000">Calculus of Constructions</A>
</UL>
<LI><A NAME="tex2html153"
 HREF="node5.htm#SECTION00542000000000000000">Defining Mathematical Properties</A>
</UL>
<LI><A NAME="tex2html154"
 HREF="node5.htm#SECTION00550000000000000000">OpenMath Phrasebooks</A>
<UL>
<LI><A NAME="tex2html155"
 HREF="node5.htm#SECTION00551000000000000000">OpenMath Compliancy</A>
</UL></UL>
<!--End of Table of Child-Links-->
<HR>

<H1><A NAME="SECTION00500000000000000000"></A>
<A NAME="sec:om"></A>
<BR>
The OpenMath Standard
</H1>

<P>
A lot of the mathematics online has until recently been presented
using the de-facto standard LaTeX (or TeX) despite the well known
limitations it has in handling interactivity. Documents generated by
transforming TeX sources to various flavors of HTML support only
cross-linking mechanisms and produce, in most cases, images for
formulae. More adventurous authors have included interactivity in the
form of plug-ins or J<SMALL>AVA</SMALL> applets in their pages. In the past three
years things have changed and new web technologies have established
themselves. In particular, the World Wide Web Consortium has published
the
<a href="http://www.w3.org/TR/REC-MathML2/">recommendation for MathML</a>,
the Mathematical Markup Language for
describing mathematical notation and capturing both its structure and
content&nbsp;[<A
 HREF="node10.htm#MathML:2000">12</A>]. Similarly, the OpenMath Society has endorsed
a newer version of 
<a href="./reports/standard.pdf">the OpenMath Standard</a>
for representing the semantics
of mathematical objects and facilitating the exchange between computer
programs, the storage in knowledge bases, and the electronic
publication of mathematics&nbsp;[<A
 HREF="node10.htm#OM:D134a">23</A>]. In this document we
describe <a href="./reports/standard.pdf">the OpenMath Standard</a>.

<P>
By enabling mathematics to be served, received, and processed
electronically, both MathML and OpenMath aim at enhancing mathematical
communication on the on the World Wide Web just as hypertext has done
for text. The parallel evolution and definition of these predominant
markup languages for mathematics&nbsp;[<A
 HREF="node10.htm#Caprotti_Carlisle:99">17</A>] resulted
in an ideal separation of complementary r&#244;les: MathML presentation
can be used for presenting mathematical content written in OpenMath.  The
major observation underlying this state of affairs is that
<SPAN  CLASS="textit">mathematics and its presentation should not be viewed as one and
  the same thing</SPAN>. While the meaning of a mathematical object should
be uniquely defined and understood, its visualisation and rendering
depends on time and place, more precisely it depends on the context
and on the style preferences of the author or reader.  

<P>
OpenMath is a language for <EM> representing</EM> and <EM> communicating
  mathematics</EM>&nbsp;[<A
 HREF="node10.htm#Abbott_Leeuwen_Strotmann:98">11</A>].  Originally, it
was conceived as a language for all computer algebra
packages&nbsp;[<A
 HREF="node10.htm#Dalmas_Gaetano_Watt:97">26</A>,<A
 HREF="node10.htm#OM:D134a">23</A>]. Presently it is
equipped for conveying mathematical concepts arising from all areas of
mathematics, for instance logic. Now OpenMath can be used to express
formal mathematical objects, so that formal theorems and proofs,
understandable to proof checkers, can be communicated, as well as the
usual mathematical expressions handled by computer algebra packages.
In order to represent mathematical content it is crucial that a
mechanism is established to allow for the introduction of new
concepts, since this activity is at the core of mathematics. The OpenMath
representation of mathematics relies for this task on a small set of
``expression tree'' constructors (application, binding, attribution
and error), on some basic objects (byte-arrays, strings, integers, IEEE
floats, variables), and on the usage of symbols defined in Content
Dictionaries. These are publicly available collections of mathematical
definitions, a sort of xml dictionary of mathematics.  The
interested reader may find the latest versions of the
standard documents and the collection of public Content Dictionaries at
<a href="http://www.openmath.org">the OpenMath Society website</a>.
<P>
There are several aspects of OpenMath. Those presented in this section
are: the architecture of how OpenMath views integration of computational
software, the OpenMath Standard, and the OpenMath Phrasebooks and tools.
The OpenMath Standard is concerned with the objects, their encodings, and
the Content Dictionaries. The reader is referred to 
<a href="./reports/standard.pdf">the OpenMath Standard</a>
&nbsp;[<A HREF="node10.htm#OM:D134a">23</A>] for details.

<P>

<H1><A NAME="SECTION00510000000000000000"></A>
<A NAME="ssec:arch"></A>
<BR>
OpenMath Architecture
</H1>

<P>
The architecture of OpenMath is made up of three layers of representation
of a mathematical object: the private layer for the internal
representation, the abstract layer for the representation as an OpenMath
object, and the communication layer for translating the OpenMath object
to a stream of bytes. An application will generally manipulate 
mathematical objects using its internal representation; it can convert
them to OpenMath objects and communicate them by using the byte stream
representation of OpenMath objects.

<P>
It is not within the scope of OpenMath to define how communication takes
place, or the behaviour of services running in an integrated mathematical
environment.  OpenMath defines the structure and semantics of the objects
being exchanged, not the actions taken when an object is received.  For
example, OpenMath can represent an integrand, and an algebra system might
try to evaluate it in closed form while a renderer might attempt to
print it on a screen.  Therefore, OpenMath is one ingredient
among many others that are needed for achieving integration of
computational tools, see for example a description of
how OpenMath is being used in recent applications&nbsp;[<A
 HREF="node10.htm#Calculemus:00">10</A>].

<P>
OpenMath objects are representations of mathematical entities that can be
communicated among various software applications in a meaningful way,
that is in such a way that their ``semantics'' are well-defined.
OpenMath provides basic objects
like integers, symbols, floating-point numbers, character strings,
byte-arrays, and variables, and compound objects: applications,
bindings, errors, and attributions.  Content Dictionaries (CDs)
specify the meaning of symbols informally using natural language and,
optionally, they might formally assign type information in the
signature of the symbols. CDs are public and are used to represent the
actual common knowledge among OpenMath-compliant applications. A central
idea to the OpenMath philosophy is that CDs fix the ``meaning'' of
objects independently of the application. 

<P>
The integration of various software packages is achieved by means of
OpenMath <SPAN  CLASS="textit">Phrasebooks</SPAN>; they convert OpenMath objects to and from the
software package's internal representation and determine the package's
actions.  The translation is governed by the CDs and the specifics of
the software packages.

<P>

<H1><A NAME="SECTION00520000000000000000"></A>
<A NAME="ssec:obj"></A>
<BR>
OpenMath Objects
</H1>

<P>
We now focus on the abstract layer, where mathematical objects are
represented by labelled trees, called OpenMath objects or OpenMath
expressions. The formal definition of an abstract OpenMath object is
given below.

<P>

<P>
 
<P>
<DIV><B>Definition  <SPAN CLASS="arabic">4</SPAN>.<SPAN CLASS="arabic">2</SPAN>.<SPAN CLASS="arabic">1</SPAN></B> &nbsp; 
OpenMath objects are built recursively as follows.

<P>
 
<DL COMPACT>
<DT>(i)</DT>
<DD>Basic OpenMath objects, e.g., integers, IEEE floating point
numbers, Unicode character strings, byte-arrays, symbols (defined in
  CDs) and variables, are OpenMath objects.

<P>
 </DD>
<DT>(ii)</DT>
<DD>If <SPAN CLASS="MATH"><I>A</I><SUB>1</SUB></SPAN>, ..., <SPAN CLASS="MATH"><I>A</I><SUB>n</SUB></SPAN> <SPAN CLASS="MATH">(<I>n</I> &gt; 0)</SPAN> are OpenMath objects, then
 <DIV ALIGN="CENTER">
  <B> application</B>
<!-- MATH
 $(A_1, \ldots, A_n)$
 -->
<SPAN CLASS="MATH">(<I>A</I><SUB>1</SUB>,..., <I>A</I><SUB>n</SUB>)</SPAN>
</DIV>
is an OpenMath <SPAN  CLASS="textit">application object</SPAN>.

<P>
 </DD>
<DT>(iii)</DT>
<DD>If 
<!-- MATH
 $S_1, \ldots, S_n$
 -->
<SPAN CLASS="MATH"><I>S</I><SUB>1</SUB>,..., <I>S</I><SUB>n</SUB></SPAN> are OpenMath symbols, and <SPAN CLASS="MATH"><I>A</I></SPAN>, <SPAN CLASS="MATH"><I>A</I><SUB>1</SUB></SPAN>,
  ..., <SPAN CLASS="MATH"><I>A</I><SUB>n</SUB></SPAN>, <SPAN CLASS="MATH">(<I>n</I> &gt; 0)</SPAN> are OpenMath objects, then
<DIV ALIGN="CENTER">
  <B> attribution</B>
<!-- MATH
 $(A, S_1 \; A_1, \; \ldots \; , S_n \; A_n)$
 -->
<SPAN CLASS="MATH">(<I>A</I>, <I>S</I><SUB>1</SUB> &nbsp;<I>A</I><SUB>1</SUB>, &nbsp;... &nbsp;, <I>S</I><SUB>n</SUB> &nbsp;<I>A</I><SUB>n</SUB>)</SPAN>
</DIV>
is an OpenMath <SPAN  CLASS="textit">attribution object</SPAN> and <SPAN CLASS="MATH"><I>A</I></SPAN> is the object
  <SPAN  CLASS="textit">stripped of attributions</SPAN>. The operation of recursively
  applying stripping to the stripped object is called <SPAN  CLASS="textit">flattening
    of the attribution</SPAN>. When  the stripped object after flattening
  is a  variable, the attributed object is called <SPAN  CLASS="textit">attributed
    variable</SPAN>.

<P>
 </DD>
<DT>(iv)</DT>
<DD>If <SPAN CLASS="MATH"><I>B</I></SPAN> and <SPAN CLASS="MATH"><I>C</I></SPAN> are OpenMath objects, and <SPAN CLASS="MATH"><I>v</I><SUB>1</SUB></SPAN>, <SPAN CLASS="MATH">...</SPAN>,
  <SPAN CLASS="MATH"><I>v</I><SUB>n</SUB></SPAN> 
<!-- MATH
 $(n \geq 0)$
 -->
<SPAN CLASS="MATH">(<I>n</I> <IMG
 WIDTH="16" HEIGHT="28" ALIGN="MIDDLE" BORDER="0"
 SRC="img1.gif"
 ALT="$ \geq$"> 0)</SPAN> are OpenMath variables or attributed variables,
  then
<DIV ALIGN="CENTER">
<B> binding</B>
<!-- MATH
 $(B, v_1, \ldots, v_{n}, C)$
 -->
<SPAN CLASS="MATH">(<I>B</I>, <I>v</I><SUB>1</SUB>,..., <I>v</I><SUB>n</SUB>, <I>C</I>)</SPAN>
</DIV>
is an OpenMath <SPAN  CLASS="textit">binding object</SPAN>.

<P>
 </DD>
<DT>(v)</DT>
<DD>If <SPAN CLASS="MATH"><I>S</I></SPAN> is an OpenMath symbol and <SPAN CLASS="MATH"><I>A</I><SUB>1</SUB></SPAN>, ..., <SPAN CLASS="MATH"><I>A</I><SUB>n</SUB></SPAN> 
<!-- MATH
 $(n \geq
0)$
 -->
<SPAN CLASS="MATH">(<I>n</I> <IMG
 WIDTH="16" HEIGHT="28" ALIGN="MIDDLE" BORDER="0"
 SRC="img1.gif"
 ALT="$ \geq$"> 0)</SPAN> are OpenMath objects, then
<DIV ALIGN="CENTER">
<B> error</B>
<!-- MATH
 $(S, A_1,\ldots,A_n)$
 -->
<SPAN CLASS="MATH">(<I>S</I>, <I>A</I><SUB>1</SUB>,..., <I>A</I><SUB>n</SUB>)</SPAN>
</DIV>

<P>
is an OpenMath <SPAN  CLASS="textit">error
    object</SPAN>.</DD>
</DL></DIV><P></P>

<P>
As mentioned earlier, OpenMath <SPAN  CLASS="textit">Content Dictionaries</SPAN> (CD) collect
and provide definitions of mathematical notions for usage within OpenMath
objects as described in Section&nbsp;<A HREF="node5.htm#ssec:cd">4.4</A>. The official repository
for CDs is&nbsp;[<A
 HREF="node10.htm#OMurl">33</A>].  In this document we denote by
<TT>foo:bar</TT> the symbol with name <TT>bar</TT> defined in the CD
<TT>foo</TT>.

<P>
OpenMath abstract objects representing mathematical concepts are obtained
for instance by using the <SPAN  CLASS="textbf">application</SPAN> constructor as in the
following examples.  

<P>
 
<P>
<DIV><B>Example  <SPAN CLASS="arabic">4</SPAN>.<SPAN CLASS="arabic">2</SPAN>.<SPAN CLASS="arabic">1</SPAN></B> &nbsp; 
 As a first example, consider the OpenMath object <SPAN CLASS="MATH"><I>A</I></SPAN> corresponding to
<SPAN CLASS="MATH">1 + 2</SPAN>,

<!-- MATH
 \begin{displaymath}
{\textbf{application}(\texttt{arith1:plus},1,2)}
\end{displaymath}
 -->

<P></P>
<DIV ALIGN="CENTER" CLASS="mathdisplay">
<B>application</B>(<texttt>arith1</texttt>:<texttt>plus</texttt>, 1, 2)
</DIV><P></P>
where <TT>arith1:plus</TT> is the symbol plus defined in the CD
<TT> arith1</TT> and <SPAN CLASS="MATH">1</SPAN> and <SPAN CLASS="MATH">2</SPAN> represent basic objects (arbitrary length
integers).  </DIV><P></P>

<P>
 
<P>
<DIV><A NAME="ex:Zp"><B>Example  <SPAN CLASS="arabic">4</SPAN>.<SPAN CLASS="arabic">2</SPAN>.<SPAN CLASS="arabic">2</SPAN></B></A> &nbsp; 
 
Applications can also be useful for representing algebraic structures.
Consider the polynomial ring 
<!-- MATH
 $\cal{Z}_p[X]$
 -->
<SPAN CLASS="MATH"><IMG
 WIDTH="17" HEIGHT="14" ALIGN="BOTTOM" BORDER="0"
 SRC="img2.gif"
 ALT="$ \cal {Z}$"><SUB>p</SUB>[<I>X</I>]</SPAN>. It is representable as
OpenMath abstract object like: 
<BR>
<DIV ALIGN="CENTER" CLASS="mathdisplay"><A NAME="eq:polr"></A>
<!-- MATH
 \begin{eqnarray}
\textbf{application}(\texttt{polyr:PolynomialRingR}, \textbf{application}(\texttt{setname2:Zm},p),x)
\end{eqnarray}
 -->

<TABLE CELLPADDING="0" ALIGN="CENTER" WIDTH="100%">
<TR VALIGN="MIDDLE"><TD NOWRAP ALIGN="RIGHT"><B>application</B>(<texttt>polyr</texttt> : <texttt>PolynomialRingR</texttt>,<B>application</B>(<texttt>setname2</texttt> : <texttt>Zm</texttt>, <I>p</I>), <I>x</I>)</TD>
<TD>&nbsp;</TD>
<TD>&nbsp;</TD>
<TD CLASS="eqno" WIDTH=10 ALIGN="RIGHT">
(<SPAN CLASS="arabic">4</SPAN>.<SPAN CLASS="arabic">1</SPAN>)</TD></TR>
</TABLE></DIV>
<BR CLEAR="ALL"><P></P>
In this object, the OpenMath symbols <TT>polyr:PolynomialRingR</TT> and
<TT>setname2:Zm</TT> identify the polynomial ring structure obtained
from the integers modulo <SPAN CLASS="MATH"><I>p</I></SPAN>. More precisely, they are the symbols
called <TT>PolynomialRingR</TT> and <TT>Zm</TT> defined in the CDs
<TT>polyr</TT> and <TT>setname2</TT>, respectively.   </DIV><P></P>

<P>
 
<P>
<DIV><B>Example  <SPAN CLASS="arabic">4</SPAN>.<SPAN CLASS="arabic">2</SPAN>.<SPAN CLASS="arabic">3</SPAN></B> &nbsp; 
 
Now a slightly more complicated OpenMath object is given in
Figure&nbsp;<A HREF="node5.htm#fig:om-obj">4.1</A>, namely the one for

<P>
 

<!-- MATH
 \begin{displaymath}
\int_0^1 \left(1-\frac{1}{2+e^{2\pi i x}}\right)dx.
\end{displaymath}
 -->

<P></P>
<DIV ALIGN="CENTER" CLASS="mathdisplay">
<IMG
 WIDTH="27" HEIGHT="57" ALIGN="MIDDLE" BORDER="0"
 SRC="img3.gif"
 ALT="$\displaystyle \int_{0}^{1}$"><IMG
 WIDTH="18" HEIGHT="54" ALIGN="MIDDLE" BORDER="0"
 SRC="img4.gif"
 ALT="$\displaystyle \left(\vphantom{1-\frac{1}{2+e^{2\pi i x}}}\right.$">1 - <IMG
 WIDTH="69" HEIGHT="49" ALIGN="MIDDLE" BORDER="0"
 SRC="img5.gif"
 ALT="$\displaystyle {\frac{1}{2+e^{2\pi i x}}}$"> <IMG
 WIDTH="18" HEIGHT="54" ALIGN="MIDDLE" BORDER="0"
 SRC="img6.gif"
 ALT="$\displaystyle \left.\vphantom{1-\frac{1}{2+e^{2\pi i x}}}\right)$"><I>dx</I>.
</DIV><P></P>
It involves,
amongst others, the CDs <TT> arith1</TT> for the symbols
<SPAN CLASS="MATH"><I>e</I></SPAN>, <code>+</code>, <code>-</code>,
<code>*</code>, <code>/</code>, <code>^</code> and <TT> nums1</TT> for <SPAN CLASS="MATH"><IMG
 WIDTH="14" HEIGHT="14" ALIGN="BOTTOM" BORDER="0"
 SRC="img7.gif"
 ALT="$ \pi$"></SPAN> and imaginary&nbsp;<SPAN CLASS="MATH"><I>i</I></SPAN>.    </DIV><P></P>

<P>

<P></P>
<DIV ALIGN="CENTER"><A NAME="fig:om-obj"></A><A NAME="751"></A>
<TABLE>
<CAPTION ALIGN="BOTTOM"><STRONG>Figure 4.1:</STRONG>
An OpenMath object built by  <SPAN  CLASS="textbf">binding</SPAN> and <SPAN  CLASS="textbf">application</SPAN>.</CAPTION>
<TR><TD>
<DIV ALIGN="CENTER">
<IMG
 WIDTH="559" HEIGHT="251" ALIGN="MIDDLE" BORDER="0"
 SRC="img8.gif"
 ALT="\fbox {\begin{minipage}{\textwidth}
{\footnotesize
\begin{tabbing}
\textbf{appli...
...&gt;\&gt;\&gt;\texttt{nums1:i},\\
\&gt;\&gt;\&gt;\&gt;\&gt;\&gt;$x$)))))))
\end{tabbing}}
\end{minipage}}">
</DIV>
<P>
<DIV ALIGN="CENTER"> 

</DIV></TD></TR>
</TABLE>
</DIV><P></P>

<P>

<H1><A NAME="SECTION00530000000000000000"></A>
<A NAME="ssec:enc"></A>
<BR>
OpenMath Encodings
</H1>

<P>
OpenMath encodings map OpenMath objects to byte streams that can easily be
exchanged between processes or stored and retrieved from files.

<P>
Two major encodings supported and described by 
<a href="./reports/standard.pdf">the OpenMath Standard</a> are
XML and binary. The first encoding uses only ISO 646:1983
characters&nbsp;[<A
 HREF="node10.htm#iso646:83">29</A>] (<SMALL>ASCII</SMALL> characters) and is suitable
for sending OpenMath objects via e-mail, news, cut-and-paste, etc.&nbsp;and for
further processing by a variety of XML tools.

<P>
The second encoding is a custom-built binary encoding meant to be used when
compactness is crucial, for instance in interprocess communications
of very large objects over a network. 

<P>
 
<P>
<DIV><B>Example  <SPAN CLASS="arabic">4</SPAN>.<SPAN CLASS="arabic">3</SPAN>.<SPAN CLASS="arabic">1</SPAN></B> &nbsp; 
 
For example, consider a polynomial with coefficients in the ring of
integers modulo some prime <SPAN CLASS="MATH"><I>p</I></SPAN>, <SPAN CLASS="MATH"><I>f</I> = <I>X</I><SUP>3</SUP> - <I>X</I> + 1</SPAN>. It
can be represented in several ways as an abstract OpenMath object, either
as univariate or (degenerate) multivariate, as a sum of terms or vector
of coefficients etc.  Supposing that we wish to represent <SPAN CLASS="MATH"><I>f</I></SPAN> recursively,
i.e.&nbsp;as a univariate polynomial whose coefficients are themselves
univariate polynomials and so on,  by using the symbol
<TT>polyr:PolynomialR</TT>,  It can be encoded in a human-readable
format using XML and stored as:

<P>
 

<DIV><SMALL CLASS="SCRIPTSIZE"><TT>
 &lt;OMOBJ&gt;&lt;OMA&gt;&lt;OMS cd="polyr" name="PolynomialR"/&gt;
</TT><TABLE &nbsp;WIDTH="227">
<TR><TD>
<DIV><TT><B><SMALL CLASS="SCRIPTSIZE">
<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;OMA&gt;&lt;OMS cd="polyr" name="PolynomialRingR"/&gt;
<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;OMA&gt;&lt;OMS cd="setname2" name="Zm"/&gt;
<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;OMV name="p"&gt;
<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/OMA&gt;
<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;OMV name="X"/&gt;
<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/OMA&gt;
<BR></TD></TR>
</TABLE><TT></SPAN>
<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;OMA&gt;&lt;OMS cd="polyr" name="PolyRrep"/&gt;
<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;OMV name="X"/&gt;
<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;OMA&gt;&lt;OMS cd="polyr" name="monomial"/&gt;
<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;OMI&gt; 3 &lt;/OMI&gt;&lt;OMI&gt; 1 &lt;/OMI&gt;
<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/OMA&gt;
<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;OMA&gt;&lt;OMS cd="polyr" name="monomial"/&gt;
<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;OMI&gt; 1 &lt;/OMI&gt;&lt;OMI&gt; -1 &lt;/OMI&gt;
<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/OMA&gt;
<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;OMA&gt;&lt;OMS cd="polyr" name="monomial"/&gt;
<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;OMI&gt; 0 &lt;/OMI&gt;&lt;OMI&gt; 1 &lt;/OMI&gt;
<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/OMA&gt;
<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/OMA&gt;
<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/OMA&gt;
<BR>&lt;/OMOBJ&gt;
<BR></TT></SMALL></DIV>   


<P>
</DIV><P></P>

<P>
Reading from the encoding of the example, the outermost XML
element <TT>&lt;OMOBJ&gt;</TT> encloses nested OpenMath application objects,
appearing within the element <TT>&lt;OMA&gt;</TT>, which are built using
OpenMath symbols (<TT>&lt;OMS&gt;</TT>), OpenMath variables (<TT>&lt;OMV&gt;</TT>), and
integers (<TT>&lt;OMI&gt;</TT>).  Notice that the application object
highligted in <TT><B>bold</B></TT> above
is essentially the XML encoding of the
polynomial ring expressed abstractly in equation&nbsp;(<A HREF="node5.htm#eq:polr">4.1</A>).

<P>
When embedding XML encoded OpenMath objects into a larger XML
document one may wish, or need, to use additional features. For
example use of extra XML attributes to specify
<a href="http://www.w3.org/TR/REC-xml-names">XML Namespaces</a>&nbsp;[<A
 HREF="node10.htm#xmlns">32</A>] or <TT>xml:lang</TT> attributes to specify the
language used in strings&nbsp;[<A
 HREF="node10.htm#xml:98">24</A>].  Also, the encoding used in the
larger document may not be <SMALL>UTF-8</SMALL>.  In particular, if OpenMath is
used with applications that use the
<a href="http://www.w3.org/TR/REC-xml-names">>XML Namespace Recommendation</a>
&nbsp;[<A
 HREF="node10.htm#xmlns">32</A>] then they should ensure that OpenMath elements
are in the namespace <TT> http://www.openmath.org/OpenMath</TT>.  This is
most conveniently achieved by adding the namespace declaration
<code>xmlns="http://www.openmath.org/OpenMath"</code> as an attribute to each
<TT>OMOBJ</TT> element in the document.

<P>

<H1><A NAME="SECTION00540000000000000000"></A>
<A NAME="ssec:cd"></A>
<BR>
OpenMath Content Dictionaries
</H1>

<P>
A <EM> Content Dictionary</EM> holds the meanings of (various)
mathematical `words' referred to as <EM> symbols</EM>.  A set of official
CDs, each covering a specific area has been produced and is available
from the CD repository of the OpenMath society.  Content Dictionaries may
be grouped into <SPAN  CLASS="textit">CD groups</SPAN>, so that applications can easily
refer to collections of Content Dictionaries.  For instance, the
<TT>MathML</TT> CD group covers essentially the same areas of
mathematics as the content elements of the MathML
recommendation&nbsp;[<A HREF="node10.htm#MathML:2000">12</A>].  

<P>
While OpenMath objects are built using symbols defined in some Content
Dictionary that is part of an ever growing collection of Content
Dictionaries, MathML makes explicit a relatively small number of
commonplace mathematical constructs chosen within the K-12 realm of
applications and, in addition, it provides the content symbol
(<TT>csymbol</TT>) to introduce a new symbol whose semantics is not
part of the core content elements of MathML. In particular, such an
external definition may reside in an OpenMath Content Dictionary as in
the following example.

<P>
 
<P>
<DIV><B>Example  <SPAN CLASS="arabic">4</SPAN>.<SPAN CLASS="arabic">4</SPAN>.<SPAN CLASS="arabic">1</SPAN></B> &nbsp; 
 Consider the OpenMath abstract object of Example&nbsp;<A HREF="node5.htm#ex:Zp">4.2.2</A>. It
    can be expressed in MathML by introducing <TT>csymbol</TT> where an
    OpenMath symbol is needed in the encoding and is not supplied by the
    core MathML elements.

<P>
 
<SMALL CLASS="FOOTNOTESIZE"> 
</SMALL>
<DIV><SMALL CLASS="FOOTNOTESIZE"><TT>
 &lt;apply&gt;
<BR>&nbsp;&nbsp;&nbsp;&lt;csymbol encoding="OpenMath" definitionURL="http://www.openmath.org/cd/polyr.ocd"&gt;
<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;PolynomialR
<BR>&nbsp;&nbsp;&nbsp;&lt;/csymbol&gt;
<BR>&nbsp;&nbsp;&nbsp;&lt;apply&gt;
<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;csymbol encoding="OpenMath" definitionURL="http://www.openmath.org/cd/setname2.ocd"&gt;
<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;Zm
<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;/csymbol&gt;
<BR>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&lt;ci&gt;p&lt;/ci&gt;
<BR>&nbsp;&nbsp;&nbsp;&lt;/apply&gt;
<BR>&nbsp;&nbsp;&nbsp;&lt;ci&gt;X&lt;/ci&gt; &nbsp;&nbsp;
<BR>&lt;/apply&gt;
<BR></TT></SMALL></DIV>
  </DIV><P></P>

<P>
MathML supports an extensive library of presentation symbols to
accomodate even the fanciest notation used by mathematicians. In this
respect, MathML (presentation) is the preferred choice for rendering
mathematical content and as such it is to be hoped that it will be
soon be supported by tools such as browsers and editors.

<P>
Users may submit their private CDs for public use. Before they can be
adopted as official OpenMath CD they undergo a refereeing process by
appointed members of the OpenMath Society.  Details of this process
along with advice and tips for CD authors are contained in the document
<a href="./reports/cd.pdf"><i>On Writing Content Dictionaries</i></a>.

<P>
CDs hold two types of information: that which applies to the
whole CD (appears in the header of the CD), and that which is
only relevant to a particular symbol definition (appears in a CD
Definition).  Information pertinent to the whole CD includes the name,
a description, an expiration date, the status of the CD (official,
experimental, private, obsolete), and an optional list of CDs on which it
depends.  Information restricted to a particular symbol includes a
name and a description in natural language. Optional information includes
examples of the use of this symbol, and formal properties satisfied by
this symbol which can be expressed as OpenMath objects or as plain text.
<P>
A browsable version of the set of content dictionaries produced in the
project can be found
<a href="./cdfiles/index.html">here</a>, while the latest official
CDs can be found on the
<a href="http://www.openmath.org">OpenMath Society website</a>.
<P>

<H2><A NAME="SECTION00541000000000000000">
Signatures</A>
</H2>

<P>
Although OpenMath does not enforce formal specification of symbols by
using signatures and axiomatic definitions, it recognizes their
advantages and leaves room to adopt them if required. In particular,
formal signatures in a specific type system can be used to assign
mathematical meaning to OpenMath objects in such a way that validation of
objects depends exclusively on the context determined by the CDs and
on some type information carried by the objects themselves.  Formal
signatures and definitions are collected in additional files that can
be associated to a Content Dictionary.  Signatures of symbols are
expressed in <SPAN  CLASS="textit">Signature</SPAN> files by OpenMath objects representing
types in a certain type system.

<P>

<H3><A NAME="SECTION00541100000000000000"></A>
<A NAME="sec:sts"></A>
<BR>
Light-weight Simple Type System
</H3>

<P>
The Small Type System for OpenMath signatures has been designed according
to two requirements.

<UL>
<LI>Tools which read ``new'' CDs automatically, e.g. a search engine
  which suddenly encountered as a symbol from a CD that it did not
  recognise.  In the context of a ``Small'' type system, there is
  little more that can be offered to such systems than arity checking.</LI>
<LI>Human beings reading the whole of a CD's fields, to determine
  how they ought to implement the CD, either as OpenMath-reading software,
  or, more interestingly, as OpenMath-writing software.  These humans need
  to interpret the symbols in a way that cannot be totally formalised.
  However they ``ought to be'' imbued with that nebulous quality of
  ``common sense''.</LI>
</UL>
To meet these goals, a system that encodes arity (and a little more)
in a totally formal way, but leaves clues in names etc. that should
help the human reader has been used, see
<a href="./reports/sts.pdf"><I>A Small OpenMath Type System</I></a>
&nbsp;[<A HREF="node10.htm#OM:D132c">27</A>] for details.

<P>

<H3><A NAME="SECTION00541200000000000000"></A>
<A NAME="sec:som"></A>
<BR>
Calculus of Constructions
</H3>

<P>
More formal signatures can also be associated to OpenMath symbols with
the goal in mind of certifying the meaningfullness of OpenMath objects.
For instance in&nbsp;[<A
 HREF="node10.htm#Caprotti_Cohen:jsc99">18</A>], extensions of the
Calculus of Constructions (CC) have been chosen as a starting point
for assigning signatures to OpenMath symbols because they are expressive,
well suited to modeling
algebra&nbsp;[<A
 HREF="node10.htm#Bailey:98">13</A>,<A
 HREF="node10.htm#LAG">9</A>,<A
 HREF="node10.htm#Pottier_Thery:98">31</A>], and have decidable
type inference.  Freely available software packages like Lego or
C<SMALL>OQ</SMALL> [<A
 HREF="node10.htm#LEGOmanual">30</A>,<A
 HREF="node10.htm#COQ">25</A>] have implemented the necessary
functionality for performing type checks on OpenMath objects.
For more details see
<a href="./reports/ecc.pdf"><i>A Type System For OpenMath</i></a>.
<P>

<H2><A NAME="SECTION00542000000000000000">
Defining Mathematical Properties</A>
</H2>

<P>
Axiomatic definitions in a specific formal system are expressed as
OpenMath objects in <SPAN  CLASS="textit">DefMP</SPAN> (defining mathematical property) files.
More details are to be found in&nbsp;[<A
 HREF="node10.htm#Cohen_Kohlhase:99om">19</A>].

<P>
 
<P>
<DIV><B>Example  <SPAN CLASS="arabic">4</SPAN>.<SPAN CLASS="arabic">4</SPAN>.<SPAN CLASS="arabic">2</SPAN></B> &nbsp; 
 Consider a private CD, <TT>pock</TT> defining symbols needed in
    an application dealing with primality testing. Beside giving a
    natural language description, the author may introduce a new
    symbol <TT>pock:divides</TT> by a formal definition in terms of
    the <TT>DefMP</TT> representing the expression 
<!-- MATH
 $\lambda n:{\cal
N}.\lambda m:{\cal N}.(\exists q:{\cal N})\; n = qm$
 -->
<SPAN CLASS="MATH"><IMG
 WIDTH="13" HEIGHT="15" ALIGN="BOTTOM" BORDER="0"
 SRC="img9.gif"
 ALT="$ \lambda$"><I>n</I> : <IMG
 WIDTH="20" HEIGHT="15" ALIGN="BOTTOM" BORDER="0"
 SRC="img10.gif"
 ALT="$ \cal {N}$">.<IMG
 WIDTH="13" HEIGHT="15" ALIGN="BOTTOM" BORDER="0"
 SRC="img9.gif"
 ALT="$ \lambda$"><I>m</I> : <IMG
 WIDTH="20" HEIGHT="15" ALIGN="BOTTOM" BORDER="0"
 SRC="img10.gif"
 ALT="$ \cal {N}$">.(<IMG
 WIDTH="13" HEIGHT="14" ALIGN="BOTTOM" BORDER="0"
 SRC="img11.gif"
 ALT="$ \exists$"><I>q</I> : <IMG
 WIDTH="20" HEIGHT="15" ALIGN="BOTTOM" BORDER="0"
 SRC="img10.gif"
 ALT="$ \cal {N}$">) &nbsp;<I>n</I> = <I>qm</I></SPAN>: 

<P>
 
<SMALL CLASS="FOOTNOTESIZE"> 
</SMALL><PRE><TT>
<SPAN  CLASS="textbf">binding</SPAN>(<TT>lc:Lambda</TT>,
<BR>		<SPAN  CLASS="textbf">attribution</SPAN>(<SPAN CLASS="MATH"><I>n</I></SPAN>, <TT>icc:type</TT>, <TT>setname:N</TT>),
<BR>		<SPAN  CLASS="textbf">attribution</SPAN>(<SPAN CLASS="MATH"><I>m</I></SPAN>, <TT>icc:type</TT>, <TT>setname:N</TT>),
<BR>		<SPAN  CLASS="textbf">binding</SPAN>(<TT>quant1:exists</TT>,
<BR>				<SPAN  CLASS="textbf">attribution</SPAN>(<SPAN CLASS="MATH"><I>q</I></SPAN>, <TT>icc:type</TT>, <TT>setname:N</TT>),
<BR>				<SPAN  CLASS="textbf">application</SPAN>(<TT>relation1:eq</TT>,
<BR>						<SPAN CLASS="MATH"><I>n</I></SPAN>, 
<BR>						<SPAN  CLASS="textbf">application</SPAN>(<TT>arith1:times</TT>, <SPAN CLASS="MATH"><I>m</I></SPAN>, <SPAN CLASS="MATH"><I>q</I></SPAN>))))
</TT></PRE>      
</DIV><P></P>

<P>

<H1><A NAME="SECTION00550000000000000000"></A>
<A NAME="sec:phrasebook"></A>
<BR>
OpenMath Phrasebooks
</H1>

<P>
The programs that act as an interface between a software system and
OpenMath are called <SPAN  CLASS="textit">phrasebooks</SPAN>. Their task is to translate the
OpenMath object, as understood by means of Content Dictionaries, to the
corresponding internal representation used by the specific software
package.

<P>

<P></P>
<DIV ALIGN="CENTER"><A NAME="fig:tech1"></A><A NAME="758"></A>
<TABLE>
<CAPTION ALIGN="BOTTOM"><STRONG>Figure 4.2:</STRONG>
General structure of an OpenMath phrasebook</CAPTION>
<TR><TD>
<DIV ALIGN="CENTER">
    
<!-- MATH
 $\includegraphics [scale=0.75]{phrasebook}$
 -->
<IMG
 WIDTH="335" HEIGHT="161" ALIGN="BOTTOM" BORDER="0"
 SRC="img12.gif"
 ALT="\includegraphics [scale=0.75]{phrasebook}">
    
</DIV></TD></TR>
</TABLE>
</DIV><P></P>

<P>
Phrasebooks providing an interface to and from OpenMath have been built into
experimental versions of both AXIOM and GAP, cf. 
[<A
 HREF="node10.htm#axiom:om">21</A>,<A
 HREF="node10.htm#gap:om">22</A>].  These are examples in which the software
package itself provides the interface to and from OpenMath internally.
A Mathematica phrasebook based on the OpenMath C library
is available at INRIA.

<P>
Notice that the OpenMath phrasebooks are mainly concerned with the
translation between OpenMath objects and internal system-specific
representation. The interpreted behavior for most computer algebra
packages receiving an OpenMath object is an evaluation. For instance,
upon input of the object <SPAN  CLASS="textbf">application</SPAN>(<TT>integer:rem</TT>,
<SPAN  CLASS="textbf">application</SPAN>(<TT>integer:gcd</TT>, 12, 3), 2) Mathematica
would output 1.

<P>
In general, control of the interaction with a software package is not
ruled by the existing OpenMath libraries.  For this task, OpenMath allows
freedom of choice between several
paradigms&nbsp;[<A
 HREF="node10.htm#Bertoli_Calmet_Giunchiglia_Homann:98">14</A>,<A
 HREF="node10.htm#Franke_Hess_Jung_Kohlhase_Sorge:99">28</A>].

<P>
Translation tools&nbsp;[<A
 HREF="node10.htm#STARS">15</A>] have been produced which map between
the common
subset of mathematics covered by MathML-Content and the OpenMath CD
group <TT>MathML</TT>. For displaying OpenMath objects with
Presentation MathML, one may use xsl stylesheets driven by OpenMath
CDs. Sample stylesheets are available from the OpenMath Society web
pages.

<P>

<H2><A NAME="SECTION00551000000000000000">
OpenMath Compliancy</A>
</H2>

<P>
OpenMath compliancy is desirable as a means to maximize the potential for
interoperability amongst OpenMath applications.  To be <SPAN  CLASS="textit">OpenMath 
compliant</SPAN> an application has to fullfill requirements dealing with
the encoding it can accept or generate, with the declaration and
handling of CDs it understands and with the error behaviour. The
detailed description of compliancy is part of the
<a href="./reports/standard.pdf">standard</a>
&nbsp;[<A HREF="node10.htm#OM:D134a">23</A>].

<P>
<HR>
<!--Navigation Panel-->
<A NAME="tex2html144"
 HREF="node6.htm">
<IMG WIDTH="37" HEIGHT="24" ALIGN="BOTTOM" BORDER="0" ALT="next" SRC="next_motif.gif"></A> 
<A NAME="tex2html140"
 HREF="final.htm">
<IMG WIDTH="26" HEIGHT="24" ALIGN="BOTTOM" BORDER="0" ALT="up" SRC="up_motif.gif"></A> 
<A NAME="tex2html134"
 HREF="node4.htm">
<IMG WIDTH="63" HEIGHT="24" ALIGN="BOTTOM" BORDER="0" ALT="previous" SRC="previous_motif.gif"></A> 
<A NAME="tex2html142"
 HREF="node1.htm">
<IMG WIDTH="65" HEIGHT="24" ALIGN="BOTTOM" BORDER="0" ALT="contents" SRC="contents_motif.gif"></A>  
<BR>
<B> Next:</B> <A NAME="tex2html145"
 HREF="node6.htm">OpenMath and MathML</A>
<B> Up:</B> <A NAME="tex2html141"
 HREF="final.htm">The OpenMath Project Final</A>
<B> Previous:</B> <A NAME="tex2html135"
 HREF="node4.htm">Technical Summary</A>
 &nbsp <B>  <A NAME="tex2html143"
 HREF="node1.htm">Contents</A></B> 
<!--End of Navigation Panel-->
<ADDRESS>
<a href="http://www.nag.co.uk/Projects/openmath">The OpenMath Consortium</a>
<img align="top" alt="logo" src="openmath-s.gif">
</ADDRESS>
</BODY>
</HTML>
